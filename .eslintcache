[{"/home/ace/Downloads/Compressed/dashboard/dash4/dash4/src/index.js":"1","/home/ace/Downloads/Compressed/dashboard/dash4/dash4/src/App.js":"2","/home/ace/Downloads/Compressed/dashboard/dash4/dash4/src/reportWebVitals.js":"3","/home/ace/Downloads/Compressed/dashboard/dash4/dash4/src/Components/Sidebar/sidebar.js":"4","/home/ace/Downloads/Compressed/dashboard/dash4/dash4/src/Components/Sidebar/SidebarData.js":"5","/home/ace/Downloads/Compressed/dashboard/dash4/dash4/src/Components/Navbar/Navbar.js":"6","/home/ace/Desktop/LMS/LMS-Front/src/index.js":"7","/home/ace/Desktop/LMS/LMS-Front/src/reportWebVitals.js":"8","/home/ace/Desktop/LMS/LMS-Front/src/App.js":"9","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Dashboard.js":"10","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Components/Sidebar/SidebarData.js":"11","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Components/Sidebar/sidebar.js":"12","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Components/Navbar/Navbar.js":"13","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Service/CookieService.js":"14","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Service/useVisible.js":"15","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/loginPages/login.js":"16","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/loginPages/Protection.js":"17","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/Admins/NewAdmin.js":"18","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/Admins/ManageAdmin.js":"19","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/Admins/EditAdmin.js":"20","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/Students/ManageStudent.js":"21","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/Students/EditStudent.js":"22","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/Students/NewStudent.js":"23","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/classes-sections/ManageClass.js":"24","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/classes-sections/NewClass.js":"25","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/classes-sections/EditClass.js":"26","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/Not_Found/NotFound.js":"27","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/Reports/Reports.js":"28"},{"size":500,"mtime":1609072842608,"results":"29","hashOfConfig":"30"},{"size":658,"mtime":1609085535854,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1609061175728,"results":"32","hashOfConfig":"30"},{"size":1701,"mtime":1609086700228,"results":"33","hashOfConfig":"30"},{"size":1066,"mtime":1609086849519,"results":"34","hashOfConfig":"30"},{"size":795,"mtime":1609084026659,"results":"35","hashOfConfig":"30"},{"size":498,"mtime":1610357946925,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1610357946925,"results":"38","hashOfConfig":"37"},{"size":995,"mtime":1610477437449,"results":"39","hashOfConfig":"37"},{"size":1915,"mtime":1610481683475,"results":"40","hashOfConfig":"37"},{"size":854,"mtime":1610470575172,"results":"41","hashOfConfig":"37"},{"size":2070,"mtime":1610357946921,"results":"42","hashOfConfig":"37"},{"size":1838,"mtime":1610470681414,"results":"43","hashOfConfig":"37"},{"size":323,"mtime":1610357946925,"results":"44","hashOfConfig":"37"},{"size":677,"mtime":1610357946925,"results":"45","hashOfConfig":"37"},{"size":5823,"mtime":1610468085469,"results":"46","hashOfConfig":"37"},{"size":1834,"mtime":1610451725549,"results":"47","hashOfConfig":"37"},{"size":6402,"mtime":1610477042599,"results":"48","hashOfConfig":"37"},{"size":5549,"mtime":1610447897659,"results":"49","hashOfConfig":"37"},{"size":7770,"mtime":1610473359085,"results":"50","hashOfConfig":"37"},{"size":5533,"mtime":1610357946921,"results":"51","hashOfConfig":"37"},{"size":9686,"mtime":1610466734333,"results":"52","hashOfConfig":"37"},{"size":8324,"mtime":1610481166806,"results":"53","hashOfConfig":"37"},{"size":5727,"mtime":1610447512531,"results":"54","hashOfConfig":"37"},{"size":4761,"mtime":1610466772994,"results":"55","hashOfConfig":"37"},{"size":10529,"mtime":1610473492461,"results":"56","hashOfConfig":"37"},{"size":764,"mtime":1610514475697,"results":"57","hashOfConfig":"37"},{"size":2529,"mtime":1610618245858,"results":"58","hashOfConfig":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"w9nog",{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"1rgmoex",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"77"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"77"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"77"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"77"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"77"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"77"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"77"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ace/Downloads/Compressed/dashboard/dash4/dash4/src/index.js",[],["128","129"],"/home/ace/Downloads/Compressed/dashboard/dash4/dash4/src/App.js",["130"],"import React from 'react'\nimport Sidebar from './Components/Sidebar/sidebar.js'\nimport items from './Components/Sidebar/SidebarData.js'\nimport Navbar from './Components/Navbar/Navbar.js'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nfunction App() {\n  const [SidebarCheck, setSidebarCheck] = React.useState(false);\n    \n    const CheckSidebar = () => {\n        setSidebarCheck(!SidebarCheck);\n\n    };\n  return (\n    <>\n    <Router>\n      <Navbar CheckSidebar={CheckSidebar} />\n      <Sidebar items={items} SidebarCheck={SidebarCheck} />\n      <Switch>\n         \n      </Switch>\n    </Router>\n    </>\n  )\n}\n\nexport default App\n\n","/home/ace/Downloads/Compressed/dashboard/dash4/dash4/src/reportWebVitals.js",[],"/home/ace/Downloads/Compressed/dashboard/dash4/dash4/src/Components/Sidebar/sidebar.js",["131"],"import React from 'react'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Collapse from '@material-ui/core/Collapse';\nimport { Link, NavLink } from 'react-router-dom';\n\nfunction SidebarItem({ label,path, items, depthStep = 10, depth = 0, ...rest }) {\n\n    const [open, setOpen] = React.useState(false);\n    \n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    return (\n      <>\n     \n        <ListItem button dense {...rest}>\n          <ListItemText button onClick={handleClick} style={{ paddingLeft: depth * depthStep }}>\n            <Link className=\"Link\" to={path}>{label}</Link>\n          </ListItemText>\n        </ListItem>\n        {Array.isArray(items) ? (\n          <List disablePadding dense>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            {items.map((subItem) => (\n              <SidebarItem\n                key={subItem.name}\n                depth={depth + 1}\n                depthStep={depthStep}\n                {...subItem}\n              />\n            ))}\n           </Collapse>\n          </List>\n        ) : null}\n      </>\n    )\n  }\n  \n  function Sidebar({ items, depthStep, depth, SidebarCheck }) {\n    return (\n      <div className={ SidebarCheck ? 'nav-menu active' : 'nav-menu'}>\n        <List disablePadding dense>\n          {items.map((sidebarItem, index) => (\n            <SidebarItem\n              key={`${sidebarItem.name}${index}`}\n              depthStep={depthStep}\n              depth={depth}\n              {...sidebarItem}\n            />\n          ))}\n        </List>\n      </div>\n    )\n  }\n  \n  \n\nexport default Sidebar;","/home/ace/Downloads/Compressed/dashboard/dash4/dash4/src/Components/Sidebar/SidebarData.js",[],"/home/ace/Downloads/Compressed/dashboard/dash4/dash4/src/Components/Navbar/Navbar.js",["132"],"import { Check } from '@material-ui/icons';\nimport React from 'react';\nimport { IconContext } from 'react-icons';\nimport * as FaIcons from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport Logo from '../../logo.png';\n\n\nexport default function Navbar(props) {\n\n  return (\n    <IconContext.Provider value={{ color: '#B5DFBB' }}>\n        <div className='navbarr'>\n    \n          <Link to='#' className='menu-bars'>\n            <FaIcons.FaBars onClick={props.CheckSidebar}  />\n          </Link>\n          <div className=\"head-title\">\n          <img className='logo' src={Logo} alt=\"Logo\" />\n          <h4>Learning Management System</h4>\n          </div>\n          <div className=\"logoutbutton\">\n              Logout\n          </div>\n        </div>\n    </IconContext.Provider>\n  );\n}\n","/home/ace/Desktop/LMS/LMS-Front/src/index.js",[],["133","134"],"/home/ace/Desktop/LMS/LMS-Front/src/reportWebVitals.js",[],"/home/ace/Desktop/LMS/LMS-Front/src/App.js",["135"],"import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport login from './Dashboard/loginPages/login.js';\nimport Protection from './Dashboard/loginPages/Protection';\nimport Dashboard from './Dashboard/Dashboard';\nimport NotFound from './Dashboard/Pages/Not_Found/NotFound'\nimport Login from './Dashboard/loginPages/login.js';\n\n\n\n\n\nfunction App() {\n  const { pic, setpic } = useState(\"\");\n\n  const picsetting = (pic) => {\n    setpic(pic);\n};\n  console.log(pic)\n    return (\n      <div className='App'>\n        <Router>\n            <Switch>\n            <Protection path=\"/admin\" >\n                <Dashboard pic={pic} />\n            </Protection>\n                <Route  exact path='/'>\n                  <Login picsetting={picsetting} />\n                </Route>\n                <Route>\n                   <NotFound />\n                </Route>\n            </Switch>\n        </Router>\n      </div>\n    );\n  }\n  \n  export default App;\n","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Dashboard.js",[],"/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Components/Sidebar/SidebarData.js",[],"/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Components/Sidebar/sidebar.js",[],"/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Components/Navbar/Navbar.js",[],"/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Service/CookieService.js",[],"/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Service/useVisible.js",[],"/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/loginPages/login.js",[],"/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/loginPages/Protection.js",[],"/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/Admins/NewAdmin.js",["136","137"],"import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { green } from '@material-ui/core/colors';\nimport { useForm } from \"react-hook-form\";\nimport CookieService from '../../Service/CookieService';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios'\n\n\nconst useStyless = makeStyles((themee) => ({\n  paperr: {\n    paddingTop : themee.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n\n  },\n\n  formm: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: themee.spacing(1),\n  \n  },\n  submit: {\n    margin: themee.spacing(1, 0, 0),\n    marginLeft: \"35%\",\n    marginRight: \"35%\",\n    width: \"30%\",\n    color: themee.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n    backdrop: {\n      zIndex: themee.zIndex.drawer + 1,\n      color: 'green',\n    },\n   \n  },\n  editclass : {\n    backgroundColor: \"rgba(116, 255, 116, 0.145)\",\n    height: '83vh'\n  }\n \n}));\n\n\n\nfunction NewAdmin() {\n  const { register , handleSubmit , reset } = useForm();\n  const cookie = CookieService.get('Bearer');\n  const NewAdminclass = useStyless();\n  const [display, setdisplay] = useState({display: 'None', color: 'red' });\n  const [message, setmessage] = useState(\"none\");\n  let history = useHistory();\n\n\n  const Create = async (data) => {\n    const fd = new FormData();\n    fd.append('file', data.file[0])\n    fd.append(\"first_name\", data.first_name)\n    fd.append(\"last_name\", data.last_name)\n    fd.append(\"role\", data.role)\n    fd.append(\"email\", data.email)\n    fd.append(\"phone\", data.phone)\n    fd.append(\"password\", data.password)\n    fd.append(\"picture\", data.first_name.slice(-2) + data.phone.slice(-1) + data.last_name.slice(-2))\n    let headers = {\n      headers: {\n        'Content-Type':'form-data',\n        'Authorization': `Bearer ${cookie}`,\n      }\n    };\n    axios.post('http://localhost:8000/api/admin', fd, headers)\n   .then(res => {\n    setmessage(data.first_name + \" has been added\")\n    setdisplay({display: 'inline', color: 'green' })\n    reset();\n   })\n  .catch((error) => {\n   if(error.response){\n     console.log(error.response.data);\n     setmessage(Object.entries(error.response.data.errors).map((item, index) => \" \" + item[1] + \" \"))\n    setdisplay({display: 'inline', color: 'red' })\n   }else {\n    setmessage(\"N e t w o r k  E r r o r\")\n    setdisplay({display: 'inline', color: 'red' })\n  }\n  })\n}\n  return (\n    <div className={NewAdminclass.editclass} >\n    <Container  component=\"main\" maxWidth=\"md\">\n      <div className={NewAdminclass.paperr}>\n        <Typography component=\"h1\" variant=\"h5\">\n          New Admin\n        </Typography>\n        {<span style={display}>{message}</span>}\n        <form onSubmit={handleSubmit((data) => Create(data))} className={NewAdminclass.formm} >\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n       \n                autoComplete=\"fname\"\n                name=\"first_name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstname\"\n                label=\"First Name\"\n                inputRef={register}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastname\"\n                label=\"Last Name\"\n                name=\"last_name\"\n                autoComplete=\"lname\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={6} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"role\"\n                label=\"Role\"\n                name=\"role\"\n                autoComplete=\"lname\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={6} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"phone\"\n                label=\"Phone\"\n                name=\"phone\"\n                autoComplete=\"lname\"\n                inputRef={register}\n              />\n              </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <label for=\"image\">Profile Picture</label>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"file\"\n                type=\"file\"\n                id=\"file\"\n                inputRef={register}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={NewAdminclass.submit}\n          >\n            Sign Up\n          </Button>\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={()=> {\n                history.push(\"/admin/ManageAdmin\");\n                \n            }}\n            className={NewAdminclass.submit}\n          >\n            Cancel\n          </Button>\n        </form>\n      </div>\n    </Container>\n    </div>\n  );\n}\n\nexport default NewAdmin;","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/Admins/ManageAdmin.js",["138"],"import React, { useState, useEffect } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button } from '@material-ui/core';\nimport CookieService from '../../Service/CookieService';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EditAdmin from './EditAdmin';\nimport axios from 'axios';\n\n\n\nfunction ManageAdmin() {\n  const [Admins, setAdmins] = useState([])\n  const [Loading, setLoading] = useState(true)\n  const [Editing, setEditing] = useState(false)\n  const [AdminData, setAdminData] = useState({})\n    const useStyles = makeStyles((theme) => ({\n        adminsTable: {\n          color: 'green',\n          position: 'fixed',\n          zIndex: '0',\n          width: '70%',\n          height: '84vh',\n          marginTop: '1%',\n          'marginLeft': '15%',\n         \n        },\n        backdrop: {\n          zIndex: theme.zIndex.drawer + 1,\n          color: 'green',\n        },\n        manageadmins : {\n          backgroundColor: \"rgba(116, 255, 116, 0.145)\",\n          height: '84vh'\n        }\n      }));\n    const adminsTable = useStyles();\n    const cookie = CookieService.get('Bearer');\n    const linkkk = \"http://localhost:8000/api/admins/avatars/\"\n    \n\n   const HandleEdit = () => {\n      setEditing(!Editing)\n    }\n \n    useEffect( () => {\n      setLoading(true)\n      var config = {\n        method: 'get',\n        url: 'http://localhost:8000/api/admin',\n        headers: { \n          'Authorization': `Bearer ${cookie}`, \n          'Content-Type': 'application/x-www-form-urlencoded'\n        }};\n          axios(config)\n          .then(res => {\n                  setAdmins(res.data.map((item, index)=>  \n                    {return {\n                        ...item,\n                        delete: {id: item.id, img: item.picture},\n                        edit: {id: item.id, index: index },\n                        image   : linkkk + item.picture,\n                    }}));\n                    setLoading(false)\n          }).catch(err => {\n            console.log(err.request)\n          })\n    },[]);\n    console.log(Admins)\n    const DeleteAdmin = async (id, img) => {\n        setLoading(true);\n\n        var config2 = {\n          method: 'Delete',\n          url: `http://localhost:8000/api/admins/delavatar/${img}`,\n          headers: { \n            'Authorization': `Bearer ${cookie}`, \n            'Content-Type': 'application/x-www-form-urlencoded'\n          }};\n \n        var config = {\n        method: 'Delete',\n        url: `http://localhost:8000/api/admin/${id}`,\n        headers: { \n          'Authorization': `Bearer ${cookie}`, \n          'Content-Type': 'application/x-www-form-urlencoded'\n        }};\n  \n          axios(config)\n          .then(res => {\n            setAdmins(res.data.map(item =>  \n              {return {\n                  ...item,\n                  delete: item.id,\n                  edit: item.id,\n                  image   : linkkk + item.picture\n              }}));\n                  \n          }).catch(err => {\n            console.log(err.request.message)\n          })\n\n          axios(config2)\n          .then(res => {\n    \n          }).catch(err => {\n            console.log(err.request)\n          })\n          setLoading(false)\n    }\n    const columns = [\n\n      { field: 'id', headerName: 'ID', width:65},\n      {\n        field: 'image',\n        headerName: 'Picture',\n        width: 60,\n        sortable: false,\n        renderCell: (params) => (\n    \n            <Avatar style={{width: '1', height: '1'}} alt=\"Remy Sharp\" src={params.value}/>\n        ),\n      },\n      {\n        field: 'fullName',\n        headerName: 'Full name',\n        width: 160,\n        valueGetter: (params) =>\n          `${params.getValue('first_name') || ''} ${params.getValue('last_name') || ''}`,\n      },\n     \n      { field: 'role', headerName: 'Role', width: 120},\n      { field: 'email', headerName: 'Email' , width: 160 },\n      { field: 'phone', headerName: 'Phone', type:'number', width: 110 },\n      {\n        field: 'edit',\n        headerName: 'Edit',\n        renderCell: (params) => (\n        \n            <Button style={{backgroundColor: '#36C14B'}} variant=\"contained\" size=\"small\" alt=\"Remy Sharp\" onClick={\n               () =>  {\n                setAdminData(Admins[params.value.index]);\n                setEditing(true);\n               }}>\n                Edit\n            </Button>\n        ),\n      },\n      {\n        field: 'delete',\n        headerName: 'Delete',\n        sortable: false,\n        renderCell: (params) => (\n            <Button onClick={()=> DeleteAdmin(params.value.id, params.value.img)} style={{backgroundColor: '#F76363'}} variant=\"contained\" size=\"small\" alt=\"Remy Sharp\">\n                Delete\n            </Button>\n        ),\n      },\n      \n    ];\n    console.log(HandleEdit)\n    if(Loading){\n      return (\n        <div>\n            <Backdrop className={adminsTable.backdrop} open={true}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n      )\n    }\n    if(Editing){\n      return (\n        <div>\n            <EditAdmin AdminData={AdminData} Edit={HandleEdit} />\n        </div>\n      )\n    }else {\n  return (\n    <div className={adminsTable.manageadmins} >\n    <div className={adminsTable.adminsTable} >\n      <DataGrid rows={Admins} columns={columns} pageSize={8}/>\n    </div>\n    </div>\n  );\n    }\n}\n\n\nexport default ManageAdmin;","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/Admins/EditAdmin.js",[],"/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/Students/ManageStudent.js",["139"],"import React, { useState, useEffect } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button } from '@material-ui/core';\nimport CookieService from '../../Service/CookieService';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EditStudent from './EditStudent';\nimport axios from 'axios';\n\n\n\nfunction ManageAdmin() {\n  const [Admins, setAdmins] = useState([])\n  const [Loading, setLoading] = useState(true)\n  const [Editing, setEditing] = useState(false)\n  const [AdminData, setAdminData] = useState({})\n    const useStyles = makeStyles((theme) => ({\n        adminsTable: {\n          color: 'green',\n          position: 'fixed',\n          zIndex: '0',\n          width: '75%',\n          height: '84vh',\n          marginTop: '1%',\n          'marginLeft': '15%',\n        },\n        backdrop: {\n          zIndex: theme.zIndex.drawer + 1,\n          color: 'green',\n        },\n      }));\n    const adminsTable = useStyles();\n    const cookie = CookieService.get('Bearer');\n    const linkkk = \"http://localhost:8000/api/students/avatars/\"\n    \n\n   const HandleEdit = () => {\n      setEditing(!Editing)\n    }\n \n    useEffect( () => {\n      setLoading(true)\n      var config = {\n        method: 'get',\n        url: 'http://localhost:8000/api/student',\n        headers: { \n          'Authorization': `Bearer ${cookie}`, \n          'Content-Type': 'application/x-www-form-urlencoded'\n        }};\n          axios(config)\n          .then(res => {\n            console.log(res.data)\n                  setAdmins(res.data.map((item, index)=>  \n                    {return {\n                        ...item,\n                        delete: {id: item.id, img: item.picture},\n                        edit: {id: item.id, index: index },\n                        image   : linkkk + item.picture,\n                    }}));\n                    setLoading(false)\n          }).catch(err => {\n            console.log(err.request)\n          })\n    },[]);\n    const DeleteAdmin = async (id, img) => {\n        setLoading(true);\n        console.log(img)\n        var config2 = {\n          method: 'Delete',\n          url: `http://localhost:8000/api/students/delavatar/${img}`,\n          headers: { \n            'Authorization': `Bearer ${cookie}`, \n            'Content-Type': 'application/x-www-form-urlencoded'\n          }};\n \n        var config = {\n        method: 'Delete',\n        url: `http://localhost:8000/api/student/${id}`,\n        headers: { \n          'Authorization': `Bearer ${cookie}`, \n          'Content-Type': 'application/x-www-form-urlencoded'\n        }};\n  \n          axios(config)\n          .then(res => {\n            console.log(res)\n            setAdmins(res.data.map(item =>  \n              {return {\n                  ...item,\n                  delete: item.id,\n                  edit: item.id,\n                  image   : linkkk + item.picture\n              }}));\n                  \n          }).catch(err => {\n            console.log(err)\n          })\n\n          axios(config2)\n          .then(res => {\n    \n          }).catch(err => {\n            console.log(err)\n          })\n          setLoading(false)\n    }\n    const columns = [\n\n      { field: 'student_id', headerName: 'ID', width:120},\n      {\n        field: 'image',\n        headerName: 'Picture',\n        width: 60,\n        sortable: false,\n        renderCell: (params) => (\n    \n            <Avatar style={{width: '1', height: '1'}} alt=\"Remy Sharp\" src={params.value}/>\n        ),\n      },\n      {\n        field: 'fullName',\n        headerName: 'Full name',\n        width: 150,\n        valueGetter: (params) =>\n          `${params.getValue('first_name') || ''} ${params.getValue('last_name') || ''}`,\n      },\n     \n      { field: 'class_name', headerName: 'Class', width: 100},\n      { field: 'section_name', headerName: 'Section', width: 100},\n      { field: 'email', headerName: 'Email' , width: 160 },\n      { field: 'phone', headerName: 'Phone', type:'number', width: 110 },\n      {\n        field: 'edit',\n        headerName: 'Edit',\n        sortable: false,\n        renderCell: (params) => (\n        \n            <Button style={{backgroundColor: '#36C14B'}} variant=\"contained\" size=\"small\" alt=\"Remy Sharp\" onClick={\n               () =>  {\n                 console.log(params)\n                setAdminData(Admins[params.value.index]);\n                setEditing(true);\n               }}>\n                Edit\n            </Button>\n        ),\n      },\n      {\n        field: 'delete',\n        headerName: 'Delete',\n        sortable: false,\n        renderCell: (params) => (\n            <Button onClick={()=> DeleteAdmin(params.value.id, params.value.img)} style={{backgroundColor: '#F76363'}} variant=\"contained\" size=\"small\" alt=\"Remy Sharp\">\n                Delete\n            </Button>\n        ),\n      },\n      \n    ];\n    if(Loading){\n      return (\n        <div>\n            <Backdrop className={adminsTable.backdrop} open={true}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n      )\n    }\n    if(Editing){\n      return (\n        <div>\n            <EditStudent AdminData={AdminData} Edit={HandleEdit} />\n        </div>\n      )\n    }else {\n  return (\n    <div className={adminsTable.adminsTable} >\n      <DataGrid rows={Admins} columns={columns} pageSize={8}/>\n    </div>\n  );\n    }\n}\n\n\nexport default ManageAdmin;","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/Students/EditStudent.js",["140","141","142","143"],"import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { green } from '@material-ui/core/colors';\nimport { useForm } from \"react-hook-form\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CookieService from '../../Service/CookieService';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios'\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" style={{cursor: \"alias\", textDecoration: \"none\"}}>\n        Learning Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\nconst useStyless = makeStyles((themee) => ({\n  paperr: {\n    paddingTop : themee.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n\n  formm: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: themee.spacing(1),\n  },\n  submit: {\n    margin: themee.spacing(1, 0, 0),\n    marginLeft: \"35%\",\n    marginRight: \"35%\",\n    width: \"30%\",\n    color: themee.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n\n    },\n    backdrop: {\n      zIndex: themee.zIndex.drawer + 1,\n      color: 'green',\n    },\n    studentsloading: {\n      color: 'green',\n      position: 'fixed',\n      zIndex: '0',\n      width: '70%',\n      height: '84vh',\n      marginTop: '1%',\n      'marginLeft': '15%',\n    },\n    editclass : {\n      backgroundColor: 'rgba(116, 255, 116, 0.145)'\n    }\n \n  },\n}));\n\n\n\nfunction NewStudent(props) {\n  const { register , handleSubmit} = useForm();\n  const cookie = CookieService.get('Bearer');\n  const NewAdminclass = useStyless();\n  const [display, setdisplay] = useState({display: 'None', color: 'red' });\n  const [message, setmessage] = useState(\"none\");\n  const [Loading, setLoading] = useState(true)\n  const [Sections, setSections] = useState([]);\n  const [Classes, setClasses] = useState([]);\n  let history = useHistory();\n  const [CurrentClass, setCurrnetClass] = useState(props.AdminData.class_id)\n  const [CurrentSection, setCurrentSection] = useState(props.AdminData.section_id)\n\n  useEffect(() => {\n    setLoading(true)\n    var config = {\n      method: 'get',\n      url: 'http://localhost:8000/api/classesinfo',\n      headers: { \n        'Authorization': `Bearer ${cookie}`, \n        'Content-Type': 'application/x-www-form-urlencoded'\n      }};\n        axios(config)\n        .then(res => {\n          console.log(res.data.sections)\n          console.log(props.AdminData.id)\n                setClasses(res.data.sections)\n                // setSections(res.data.sections.getsections.map(item => item))\n                setSections(res.data.sections.filter(item => item.id == props.AdminData.class_id)[0].getsections)\n        }).catch(err => {\n          console.log(err)\n        })\n       setLoading(false)\n  },[]);\n\n\n  const Modify = async (data) => {\n    console.log(data)\n    let id = props.AdminData.id\n    let file = data.file[0]\n    const fd = new FormData();\n    if(file){\n      fd.append('file', file)\n      fd.append(\"picture\", data['first_name'].slice(-2) + data['phone'].slice(-1) + data['last_name'].slice(-2))\n     }\n    fd.append(\"first_name\", data.first_name)\n    fd.append(\"last_name\", data.last_name)\n    fd.append(\"email\", data.email)\n    fd.append(\"phone\", data.phone)\n    fd.append(\"section_id\", data.section_id)\n    fd.append(\"class_id\", data.class_id)\n    let headers = {\n      'method' : 'POST',\n       data : fd,\n       headers: {\n         'Authorization': `Bearer ${cookie}`,\n       }\n     };\n     axios(`http://localhost:8000/api/student/${id}`, headers)\n    .then(res => {\n        console.log(res)\n     setmessage(\"Student info has been Modified\")\n     setdisplay({display: 'inline', color: 'green' })\n     props.Edit()\n     window.location.replace(\"/admin/ManageStudents\")\n    })\n   .catch((error) => {\n    if(error.response){\n      console.log(error);\n      setmessage(Object.entries(error.response.data.errors).map((item, index) => \" \" + item[1] + \" \"))\n     setdisplay({display: 'inline', color: 'red' })\n    }else {\n      setmessage(\"N e t w o r k  E r r o r\")\n      setdisplay({display: 'inline', color: 'red' })\n    }\n   })\n}\nconst handleChangeClass = (event) => {\n  setCurrnetClass(event.target.value)\n  let pickedclass = (Classes.filter((item) => item.id == event.target.value))\n  let pickedsections = pickedclass[0].getsections.map(item => item)\n  setSections(pickedsections)\n };\n\n\n const handleChangeSection = (event) => {\n   setCurrentSection(Sections.filter(item => item.id == event.target.value)[0].id)\n \n };\n\n if(Loading) {\n      return (\n        <div>\n            <Backdrop className={NewAdminclass.backdrop} open={true}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n      )\n }\n else {\n  return (\n    <div className={NewAdminclass.editclass} >\n    <Container component=\"main\" maxWidth=\"md\">\n      <div className={NewAdminclass.paperr}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Edit Student Profile\n        </Typography>\n        {<span style={display}>{message}</span>}\n        <form onSubmit={handleSubmit((data) => Modify(data))} className={NewAdminclass.formm} >\n        <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                defaultValue={props.AdminData.first_name}\n                autoComplete=\"fname\"\n                name=\"first_name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstname\"\n                label=\"First Name\"\n                inputRef={register}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                defaultValue={props.AdminData.last_name}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastname\"\n                label=\"Last Name\"\n                name=\"last_name\"\n                autoComplete=\"lname\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={6} sm={6}>\n              <TextField\n                defaultValue={props.AdminData.phone}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"phone\"\n                label=\"Phone\"\n                name=\"phone\"\n                autoComplete=\"lname\"\n                inputRef={register}\n              />\n              </Grid>\n            <Grid item xs={12}>\n              <TextField\n                defaultValue={props.AdminData.email}\n                variant=\"outlined\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <TextField\n              value={CurrentClass}\n              id=\"class_id\"\n              select\n              onChange={handleChangeClass}\n              name=\"class_id\"\n              inputRef={register}\n              SelectProps={{\n              native: true,\n          }}\n          helperText=\"Please select CLass\"\n        >\n          {Classes.map((option) => { \n            return (\n            <option key={option.id} value={option.id}>\n              {option.class_name}\n            </option>\n          )\n          }\n          )}\n        </TextField>\n            </Grid>\n            <Grid item xs={12}>\n            <TextField\n              value={CurrentSection}\n              onChange={handleChangeSection}\n              id=\"section_id\"\n              select\n              name=\"section_id\"\n              inputRef={register}\n              SelectProps={{\n              native: true,\n          }}\n          helperText=\"Please select Section\"\n        >\n          {Sections.map((option) => { \n            return (\n            <option key={option.id} value={option.id}>\n              {option.section_name}\n            </option>\n          )\n          }\n          )}\n        </TextField>\n            </Grid>\n            <Grid item xs={12}>\n            <label for=\"image\">Profile Picture</label>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                name=\"file\"\n                type=\"file\"\n                id=\"file\"\n                inputRef={register}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={NewAdminclass.submit}\n          >\n            Save\n          </Button>\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={()=> {\n                props.Edit()\n                history.push(\"/admin/ManageStudents\");\n            }}\n            className={NewAdminclass.submit}\n          >\n            Cancel\n          </Button>\n        </form>\n      </div>\n      <Box mt={1.3}>\n        <Copyright />\n      </Box>\n    </Container>\n    </div>\n  );\n          }\n}\n\nexport default NewStudent;","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/Students/NewStudent.js",["144","145","146","147"],"import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { green } from '@material-ui/core/colors';\nimport { useForm } from \"react-hook-form\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CookieService from '../../Service/CookieService';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios'\n\n\n\nconst useStyless = makeStyles((themee) => ({\n  paperr: {\n    paddingTop : themee.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: '81vh'\n  },\n\n  formm: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: themee.spacing(1),\n  },\n  submit: {\n    margin: themee.spacing(1, 0, 0),\n    marginLeft: \"35%\",\n    marginRight: \"35%\",\n    width: \"30%\",\n    color: themee.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n    backdrop: {\n      zIndex: themee.zIndex.drawer + 1,\n      color: 'green',\n    },\n    studentsloading: {\n      color: 'green',\n      position: 'fixed',\n      zIndex: '0',\n      width: '70%',\n      height: '84vh',\n      marginTop: '1%',\n      'marginLeft': '15%',\n    },\n    editclass : {\n      backgroundColor: 'rgba(116, 255, 116, 0.145)'\n    }\n \n  },\n}));\n\n\n\nfunction NewStudent() {\n  const { register , handleSubmit, reset } = useForm();\n  const cookie = CookieService.get('Bearer');\n  const NewAdminclass = useStyless();\n  const [display, setdisplay] = useState({display: 'None', color: 'red' });\n  const [message, setmessage] = useState(\"none\");\n  const [Loading, setLoading] = useState(true)\n  const [Classes, setClasses] = useState([]);\n  const [Sections, setSections] = useState([]);\n  let history = useHistory();\n\n\n\n\n  useEffect(() => {\n    setLoading(true)\n    var config = {\n      method: 'get',\n      url: 'http://localhost:8000/api/classesinfo',\n      headers: { \n        'Authorization': `Bearer ${cookie}`, \n        'Content-Type': 'application/x-www-form-urlencoded'\n      }};\n        axios(config)\n        .then(res => {\n                setClasses(res.data.sections)\n                setSections(res.data.sections[0].getsections.map(item => item))\n        }).catch(err => {\n          console.log(err.request)\n        })\n       setLoading(false)\n  },[]);\n\n\n\n\n  const Create = async (data) => {\n    const fd = new FormData();\n    fd.append('file', data.file[0])\n    fd.append(\"first_name\", data.first_name)\n    fd.append(\"last_name\", data.last_name)\n    fd.append(\"email\", data.email)\n    fd.append(\"phone\", data.phone)\n    fd.append(\"section_id\", data.section_id)\n    fd.append(\"class_id\", data.class_id)\n    fd.append(\"picture\", data.first_name.slice(-2) + data.phone.slice(-1) + data.last_name.slice(-2))\n    let headers = {\n      headers: {\n        'Content-Type':'form-data',\n        'Authorization': `Bearer ${cookie}`,\n      }\n    };\n    axios.post('http://localhost:8000/api/student', fd, headers)\n   .then(res => {\n    \n    setmessage(data.first_name + \" has been added\")\n    setdisplay({display: 'inline', color: 'green' })\n    reset();\n   })\n  .catch((error) => {\n   if(error.response){\n    setmessage(Object.entries(error.response.data.errors).map((item, index) => \" \" + item[1] + \" \"))\n    setdisplay({display: 'inline', color: 'red' })\n   }else {\n    setmessage(\"N e t w o r k  E r r o r\")\n    setdisplay({display: 'inline', color: 'red' })\n  }\n  })\n}\nconst handleChangeSection = (event) => {\n  let pickedclass = (Classes.filter((item) => item.id == event.target.value))\n  let pickedsections = pickedclass[0].getsections.map(item => item)\n  setSections(pickedsections)\n\n };\n\n if(Loading) {\n      return (\n        <div>\n            <Backdrop className={NewAdminclass.backdrop} open={true}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n      )\n }\n else {\n  return (\n    <div  style={{backgroundColor: 'rgba(116, 255, 116, 0.145)'}} className={NewAdminclass.editclass} >\n    <Container component=\"main\" maxWidth=\"md\">\n      <div className={NewAdminclass.paperr}>\n        <Typography component=\"h1\" variant=\"h5\">\n          New Student\n        </Typography>\n        {<span style={display}>{message}</span>}\n        <form onSubmit={handleSubmit((data) => Create(data))} className={NewAdminclass.formm} >\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n       \n                autoComplete=\"fname\"\n                name=\"first_name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstname\"\n                label=\"First Name\"\n                inputRef={register}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastname\"\n                label=\"Last Name\"\n                name=\"last_name\"\n                autoComplete=\"lname\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={6} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"phone\"\n                label=\"Phone\"\n                name=\"phone\"\n                autoComplete=\"lname\"\n                inputRef={register}\n              />\n              </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={2}>\n            <TextField\n              id=\"class_id\"\n              select\n              onChange={handleChangeSection}\n              name=\"class_id\"\n              inputRef={register}\n              SelectProps={{\n              native: true,\n          }}\n          helperText=\"Please select Class\"\n        >\n          {Classes.map((option) => { \n            return (\n            <option key={option.id} value={option.id}>\n              {option.class_name}\n            </option>\n          )\n          }\n          )}\n        </TextField>\n            </Grid>\n            <Grid item xs={2}>\n            <TextField\n              id=\"section_id\"\n              select\n      \n              name=\"section_id\"\n              inputRef={register}\n              SelectProps={{\n              native: true,\n          }}\n          helperText=\"Please select Section\"\n        >\n          {Sections.map((option) => { \n            return (\n            <option key={option.id} value={option.id}>\n              {option.section_name}\n            </option>\n          )\n          }\n          )}\n        </TextField>\n            </Grid>\n            <Grid item xs={12}>\n            <label for=\"image\">Profile Picture</label>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"file\"\n                type=\"file\"\n                id=\"file\"\n                inputRef={register}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={NewAdminclass.submit}\n          >\n            Sign Up\n          </Button>\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={()=> {\n                history.push(\"/admin/ManageStudents\");\n            }}\n            className={NewAdminclass.submit}\n          >\n            Cancel\n          </Button>\n        </form>\n      </div>\n    </Container>\n    </div>\n  );\n          }\n}\n\nexport default NewStudent;","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/classes-sections/ManageClass.js",["148"],"import React, { useState, useEffect } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport CookieService from '../../Service/CookieService';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport EditStudent from './EditClass';\nimport axios from 'axios';\n\n\n\n\nfunction ManageAdmin() {\n  const [Admins, setAdmins] = useState([])\n  const [Loading, setLoading] = useState(true)\n  const [Editing, setEditing] = useState(false)\n  const [AdminData, setAdminData] = useState({})\n  const [display, setdisplay] = useState({display: 'None', color: 'red' });\n  const [message, setmessage] = useState(\"none\");\n    const useStyles = makeStyles((theme) => ({\n        adminsTable: {\n          color: 'green',\n          zIndex: '0',\n          width: '50%',\n          height: '65vh',\n          marginTop: '1%',\n          'marginLeft': '25%',\n          \n        },\n        manageclass : {\n          backgroundColor: \"rgba(116, 255, 116, 0.145)\",\n          height:'84vh',\n          textAlign: 'center'\n\n        },\n        backdrop: {\n          zIndex: theme.zIndex.drawer + 1,\n          color: 'green',\n        },\n        ballout : {\n          padding: '2%'\n        }\n      }));\n    const adminsTable = useStyles();\n    const cookie = CookieService.get('Bearer');\n\n   const HandleEdit = () => {\n      setEditing(!Editing)\n    }\n \n    useEffect( () => {\n      setLoading(true)\n      var config = {\n        method: 'get',\n        url: 'http://localhost:8000/api/classesinfo',\n        headers: { \n          'Authorization': `Bearer ${cookie}`, \n          'Content-Type': 'application/x-www-form-urlencoded'\n        }};\n          axios(config)\n          .then(res => {\n   \n                  setAdmins(res.data.sections.map((item, index)=>  \n                    {return {\n                        ...item,\n                        class_name: item.class_name,\n                        sections: item.getsections.map(item => item.section_name).join(\", \"),\n                        delete: {id: item.id },\n                        edit: {id: item.id,index: index },\n                    }}));\n                    setLoading(false)\n          }).catch(err => {\n            console.log(err.request)\n          })\n    },[]);\n    const DeleteAdmin = (id) => {\n        setLoading(true)\n        var config = {\n        method: 'Delete',\n        url: `http://localhost:8000/api/classes/${id}`,\n        headers: { \n          'Authorization': `Bearer ${cookie}`, \n          'Content-Type': 'application/x-www-form-urlencoded'\n        }};\n  \n          axios(config)\n          .then(res => {\n            console.log(res.data.message)\n            setmessage(res.data.message)\n            setdisplay({display: 'inline', color: 'red' , })\n          }).catch(err => {\n            console.log(err)\n          })\n          setLoading(false)\n          var config2 = {\n            method: 'get',\n            url: 'http://localhost:8000/api/classesinfo',\n            headers: { \n              'Authorization': `Bearer ${cookie}`, \n              'Content-Type': 'application/x-www-form-urlencoded'\n            }};\n              axios(config2)\n              .then(res => {\n                      setAdmins(res.data.sections.map((item, index)=>  \n                        {return {\n                            ...item,\n                            class_name: item.class_name,\n                            sections: item.getsections.map(item => item.section_name).join(\", \"),\n                            delete: {id: item.id },\n                            edit: {id: item.id, index: index},\n                        }}));\n                        setLoading(false)\n              }).catch(err => {\n                console.log(err.request)\n              })\n    }\n    const columns = [\n\n  \n\n     \n      { field: 'class_name', headerName: 'Class', width: 170},\n      { field: 'sections', headerName: 'Sections', width: 300},\n\n      {\n        field: 'edit',\n        headerName: 'Edit',\n        sortable: false,\n\n        renderCell: (params) => (\n        \n          <Button style={{backgroundColor: '#36C14B'}} variant=\"contained\" size=\"small\" alt=\"Remy Sharp\" onClick={\n            () =>  {\n              console.log(params)\n             setAdminData(Admins[params.value.index]);\n             setEditing(true);\n            }}>\n             Edit\n         </Button>\n        ),\n      },\n      {\n        field: 'delete',\n        headerName: 'Delete',\n        sortable: false,\n\n        renderCell: (params) => (\n            <Button onClick={()=> DeleteAdmin(params.value.id)} style={{backgroundColor: '#F76363'}} variant=\"contained\" size=\"small\" alt=\"Remy Sharp\">\n                Delete\n            </Button>\n        ),\n      },\n      \n    ];\n    console.log(Admins, \"lalaaa\")\n    if(Loading){\n      return (\n        <div>\n            <Backdrop className={adminsTable.backdrop} open={true}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n      )\n    }\n    if(Editing){\n      return (\n        <div>\n            <EditStudent AdminData={AdminData} Edit={HandleEdit} />\n        </div>\n      )\n    }else {\n  return (\n    <div className={adminsTable.manageclass}>\n        <Typography className={adminsTable.ballout} component=\"h1\" variant=\"h5\">\n          Manage Classes\n        </Typography>\n        {<span style={display}>{message}</span>}\n      <div className={adminsTable.adminsTable} >\n        <DataGrid rows={Admins} columns={columns} pageSize={8}/>\n      </div>\n    </div>\n  );\n    }\n}\n\n\nexport default ManageAdmin;","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/classes-sections/NewClass.js",[],"/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/classes-sections/EditClass.js",["149","150","151","152"],"import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { useForm } from \"react-hook-form\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CookieService from '../../Service/CookieService';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" style={{cursor: \"alias\", textDecoration: \"none\"}}>\n        Learning Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\nconst useStyless = makeStyles((themee) => ({\n  paperr: {\n    paddingTop : themee.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '99%'\n\n  },\n\n  formm: {\n    width: '80%', // Fix IE 11 issue.\n    marginTop: themee.spacing(1),\n  },\n  submit: {\n    margin: themee.spacing(1, 0, 0),\n    marginLeft: \"35%\",\n    marginRight: \"35%\",\n    width: \"30%\",\n    color: themee.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n    backdrop: {\n      zIndex: themee.zIndex.drawer + 1,\n      color: 'green',\n    },\n    studentsloading: {\n      color: 'green',\n      position: 'fixed',\n      zIndex: '0',\n      width: '70%',\n      height: '84vh',\n      marginTop: '1%',\n      'marginLeft': '15%',\n    },\n    \n  },\n  submit2: {\n    margin: themee.spacing(5, 2, 0),\n    width: \"10%\",\n    color: themee.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n    backdrop: {\n      zIndex: themee.zIndex.drawer + 1,\n      color: 'green',\n    },\n    studentsloading: {\n      color: 'green',\n      position: 'fixed',\n      zIndex: '0',\n      width: '70%',\n      height: '84vh',\n      marginTop: '1%',\n      'marginLeft': '15%',\n    },\n    \n  },\n  label: {\n    fontSize: '0.9rem',\n    paddingLeft: '1%'\n  },\n  adminsTable: {\n    color: 'green',\n    width: '50%',\n    height: '50vh',\n    marginTop: '1%',\n    'marginLeft': '25%',\n    \n  },\n  backdrop: {\n    zIndex: themee.zIndex.drawer + 1,\n    color: 'green',\n  },\n  editclass : {\n    backgroundColor: 'rgba(116, 255, 116, 0.145)'\n  }\n}));\n\n\n\nfunction NewStudent(props) {\n  const { register , handleSubmit, reset } = useForm();\n  const cookie = CookieService.get('Bearer');\n  const NewAdminclass = useStyless();\n  const [display, setdisplay] = useState({display: 'None', color: 'red' });\n  const [message, setmessage] = useState(\"none\");\n  const [Loading, setLoading] = useState(true)\n  const [Sections, setSections] = useState([]);\n  const [NewSection, setNewSection] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    setLoading(true)\n    setLoading(true)\n    var config = {\n      method: 'get',\n      url: 'http://localhost:8000/api/classesinfo',\n      headers: { \n        'Authorization': `Bearer ${cookie}`, \n        'Content-Type': 'application/x-www-form-urlencoded'\n      }};\n        axios(config)\n        .then(res => {\n          setSections(res.data.sections.filter(item => item.id == props.AdminData.id)[0].getsections.map((item, index)=>  \n          {return {\n              ...item,\n              sections: item.section_name,\n              delete: {id: item.id },\n          }}))\n\n        }).catch(err => {\n          console.log(err)\n          \n        })\n       setLoading(false)\n  },[]);\n\n  const DeleteSection = (id) => {\n    setLoading(true);\n    const class_id = [props.AdminData.id, id]\n    console.log(id)\n    var config = {\n    method: 'Delete',\n    url: `http://localhost:8000/api/section/${id}`,\n    headers: { \n      'Authorization': `Bearer ${cookie}`, \n      'Content-Type': 'application/x-www-form-urlencoded'\n    }};\n\n      axios(config)\n      .then(res => {\n        console.log(res)\n        setmessage(res.data.message)\n        setdisplay({display: 'inline', color: 'green' })\n      }).catch(err => {\n        console.log(err)\n        \n      })\n      var config2 = {\n        method: 'get',\n        url: 'http://localhost:8000/api/classesinfo',\n        headers: { \n          'Authorization': `Bearer ${cookie}`, \n          'Content-Type': 'application/x-www-form-urlencoded'\n        }};\n          axios(config2)\n          .then(res => {\n            setSections(res.data.sections.filter(item => item.id == props.AdminData.id)[0].getsections.map((item, index)=>  \n            {return {\n                ...item,\n                sections: item.section_name,\n                delete: {id: item.id },\n            }}))\n          }).catch(err => {\n            console.log(err)\n            \n          })\n         setLoading(false)\n\n  }\n  const columns = [\n\n    { field: 'sections', headerName: 'Sections', width: 400},\n    {\n      field: 'delete',\n      headerName: 'Delete',\n      sortable: false,\n\n      renderCell: (params) => (\n          <Button onClick={()=> DeleteSection(params.value.id)} style={{backgroundColor: '#F76363'}} variant=\"contained\" size=\"small\" alt=\"Remy Sharp\">\n              Delete\n          </Button>\n      ),\n    },\n    \n  ];\n\n  const Modify = async (data) => {\n    console.log(data)\n    let id = props.AdminData.id\n    const fd = new FormData();\n    fd.append(\"class_name\", data.class_name)\n\n    let headers = {\n      'method' : 'POST',\n       data : fd,\n       headers: {\n         'Authorization': `Bearer ${cookie}`,\n       }\n     };\n     axios(`http://localhost:8000/api/classes/${id}`, headers)\n    .then(res => {\n        console.log(res)\n     setmessage(\"Class Name has been Modified\")\n     setdisplay({display: 'inline', color: 'green' })\n     props.Edit()\n     window.location.replace('/admin/ManageClasses')\n    })\n   .catch((error) => {\n\n    if(error.response){\n      console.log(error.response.request)\n     setmessage(Object.entries(error.response.data.errors).map((item, index) => \" \" + item[1] + \" \"))\n     setdisplay({display: 'inline', color: 'red' })\n    }else {\n      setmessage(\"N e t w o r k  E r r o r\")\n      setdisplay({display: 'inline', color: 'red' })\n    }\n   })\n}\n\n\nconst newsection = () => {\n  console.log(NewSection)\n  let id = props.AdminData.id\n  const fd = new FormData();\n  fd.append(\"class_id\", id)\n  fd.append('section_name', NewSection.toUpperCase())\n  let headers = {\n    'method' : 'POST',\n     data : fd,\n     headers: {\n       'Authorization': `Bearer ${cookie}`,\n     }\n   };\n   axios(`http://localhost:8000/api/section/${id}`, headers)\n  .then(res => {\n      console.log(res)\n   setmessage(\"New section has been added\")\n   setdisplay({display: 'inline', color: 'green' })\n\n  console.log(res);\n    console.log(res.data.section, \"shit\")\n   setSections(res.data.section.map((item, index)=>  \n                {return {\n                    ...item,\n                    sections: item.section_name,\n                    delete: {id: item.id },\n\n                }}))\n    setNewSection(\"\")     \n    reset();\n  })\n .catch((error) => {\n  if(error.response){\n    setmessage(Object.entries(error.response.data.errors).map((item, index) => \" \" + item[1] + \" \"))\n   setdisplay({display: 'inline', color: 'red' })\n  }else {\n    setmessage(\"N e t w o r k  E r r o r\")\n    setdisplay({display: 'inline', color: 'red' })\n  }\n })\n}\n  console.log(props)\n if(Loading) {\n      return (\n        <div>\n            <Backdrop className={NewAdminclass.backdrop} open={true}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n      )\n }\n else {\n  return (\n    <div className={NewAdminclass.editclass} >\n      <div className={NewAdminclass.paperr}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Edit Class\n        </Typography>\n        {<span style={display}>{message}</span>}\n        <form onSubmit={handleSubmit((data) => Modify(data))} className={NewAdminclass.formm} >\n          <Grid container spacing={2}>\n          <Grid sm={3}></Grid>\n            <Grid item sm={6}>\n            <label className={NewAdminclass.label} htmlFor=\"class_name\">Class Name</label>\n              <TextField\n                autoComplete=\"Classname\"\n                name=\"class_name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                defaultValue={props.AdminData.class_name}\n                id=\"class_name\"\n     \n                inputRef={register}\n                autoFocus\n              />\n            </Grid>\n            <Grid sm={3}></Grid>\n            <Grid sm={3}></Grid>\n            <Grid item sm={6}>\n            <label className={NewAdminclass.label} htmlFor=\"class_name\">New Section</label>\n              <TextField\n                autoComplete=\"Section_name\"\n                name=\"section_name\"\n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setNewSection(e.target.value)}\n                id=\"section_name\"\n                inputRef={register}\n                autoFocus\n              />\n            </Grid>\n            <Grid sm={3}>\n            <Button onClick={newsection} className={NewAdminclass.submit2} >Add</Button>\n            </Grid>\n          </Grid>\n          <Grid sm={12}>\n          <div className={NewAdminclass.adminsTable} >\n              <DataGrid rows={Sections} columns={columns} pageSize={8}/>\n          </div>\n          </Grid>\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={NewAdminclass.submit}\n          >\n            Update\n          </Button>\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={()=> {\n                props.Edit()\n                history.push(\"/admin/ManageClasses\");\n            }}\n            className={NewAdminclass.submit}\n          >\n            Back\n          </Button>\n        </form>\n      </div>\n      <Box mt={1.3}>\n        <Copyright />\n      </Box>\n\n    </div>\n  );\n          }\n}\n\nexport default NewStudent;","/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/Not_Found/NotFound.js",[],"/home/ace/Desktop/LMS/LMS-Front/src/Dashboard/Pages/Reports/Reports.js",["153"],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":5,"column":43,"nodeType":"160","messageId":"161","endLine":5,"endColumn":48},{"ruleId":"158","severity":1,"message":"162","line":6,"column":16,"nodeType":"160","messageId":"161","endLine":6,"endColumn":23},{"ruleId":"158","severity":1,"message":"163","line":1,"column":10,"nodeType":"160","messageId":"161","endLine":1,"endColumn":15},{"ruleId":"154","replacedBy":"164"},{"ruleId":"156","replacedBy":"165"},{"ruleId":"158","severity":1,"message":"166","line":3,"column":8,"nodeType":"160","messageId":"161","endLine":3,"endColumn":13},{"ruleId":"158","severity":1,"message":"167","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":12},{"ruleId":"158","severity":1,"message":"168","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":11},{"ruleId":"169","severity":1,"message":"170","line":70,"column":7,"nodeType":"171","endLine":70,"endColumn":9,"suggestions":"172"},{"ruleId":"169","severity":1,"message":"170","line":66,"column":7,"nodeType":"171","endLine":66,"endColumn":9,"suggestions":"173"},{"ruleId":"174","severity":1,"message":"175","line":104,"column":70,"nodeType":"176","messageId":"177","endLine":104,"endColumn":72},{"ruleId":"169","severity":1,"message":"178","line":109,"column":5,"nodeType":"171","endLine":109,"endColumn":7,"suggestions":"179"},{"ruleId":"174","severity":1,"message":"175","line":155,"column":55,"nodeType":"176","messageId":"177","endLine":155,"endColumn":57},{"ruleId":"174","severity":1,"message":"175","line":162,"column":54,"nodeType":"176","messageId":"177","endLine":162,"endColumn":56},{"ruleId":"158","severity":1,"message":"167","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":12},{"ruleId":"158","severity":1,"message":"168","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":11},{"ruleId":"169","severity":1,"message":"170","line":96,"column":5,"nodeType":"171","endLine":96,"endColumn":7,"suggestions":"180"},{"ruleId":"174","severity":1,"message":"175","line":135,"column":55,"nodeType":"176","messageId":"177","endLine":135,"endColumn":57},{"ruleId":"169","severity":1,"message":"170","line":77,"column":7,"nodeType":"171","endLine":77,"endColumn":9,"suggestions":"181"},{"ruleId":"174","severity":1,"message":"175","line":140,"column":64,"nodeType":"176","messageId":"177","endLine":140,"endColumn":66},{"ruleId":"169","severity":1,"message":"182","line":152,"column":5,"nodeType":"171","endLine":152,"endColumn":7,"suggestions":"183"},{"ruleId":"158","severity":1,"message":"184","line":156,"column":11,"nodeType":"160","messageId":"161","endLine":156,"endColumn":19},{"ruleId":"174","severity":1,"message":"175","line":184,"column":66,"nodeType":"176","messageId":"177","endLine":184,"endColumn":68},{"ruleId":"158","severity":1,"message":"185","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":25},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'Check' is defined but never used.",["186"],["187"],"'login' is defined but never used.","'Link' is defined but never used.","'Box' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cookie'. Either include it or remove the dependency array.","ArrayExpression",["188"],["189"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'cookie', 'props.AdminData.class_id', and 'props.AdminData.id'. Either include them or remove the dependency array. If 'setSections' needs the current value of 'props.AdminData.class_id', you can also switch to useReducer instead of useState and read 'props.AdminData.class_id' in the reducer.",["190"],["191"],["192"],"React Hook useEffect has missing dependencies: 'cookie' and 'props.AdminData.id'. Either include them or remove the dependency array. If 'setSections' needs the current value of 'props.AdminData.id', you can also switch to useReducer instead of useState and read 'props.AdminData.id' in the reducer.",["193"],"'class_id' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"194","fix":"196"},{"desc":"197","fix":"198"},{"desc":"194","fix":"199"},{"desc":"194","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [cookie]",{"range":"203","text":"204"},{"range":"205","text":"204"},"Update the dependencies array to be: [cookie, props.AdminData.class_id, props.AdminData.id]",{"range":"206","text":"207"},{"range":"208","text":"204"},{"range":"209","text":"204"},"Update the dependencies array to be: [cookie, props.AdminData.id]",{"range":"210","text":"211"},[2209,2211],"[cookie]",[2124,2126],[3352,3354],"[cookie, props.AdminData.class_id, props.AdminData.id]",[2698,2700],[2425,2427],[3960,3962],"[cookie, props.AdminData.id]"]