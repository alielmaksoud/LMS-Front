[{"/home/fatima/Desktop/LMS-Front/src/index.js":"1","/home/fatima/Desktop/LMS-Front/src/reportWebVitals.js":"2","/home/fatima/Desktop/LMS-Front/src/App.js":"3","/home/fatima/Desktop/LMS-Front/src/Dashboard/loginPages/login.js":"4","/home/fatima/Desktop/LMS-Front/src/Dashboard/loginPages/Protection.js":"5","/home/fatima/Desktop/LMS-Front/src/Dashboard/Dashboard.js":"6","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Not_Found/NotFound.js":"7","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Admins/NewAdmin.js":"8","/home/fatima/Desktop/LMS-Front/src/Dashboard/Components/Sidebar/sidebar.js":"9","/home/fatima/Desktop/LMS-Front/src/Dashboard/Components/Sidebar/SidebarData.js":"10","/home/fatima/Desktop/LMS-Front/src/Dashboard/Components/Navbar/Navbar.js":"11","/home/fatima/Desktop/LMS-Front/src/Dashboard/Service/CookieService.js":"12","/home/fatima/Desktop/LMS-Front/src/Dashboard/Service/useVisible.js":"13","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Admins/ManageAdmin.js":"14","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Students/NewStudent.js":"15","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Students/ManageStudent.js":"16","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Reports/Reports.js":"17","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/classes-sections/ManageClass.js":"18","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/classes-sections/NewClass.js":"19","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Admins/EditAdmin.js":"20","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Reports/Donut.js":"21","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Students/EditStudent.js":"22","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Reports/Bars.js":"23","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/classes-sections/EditClass.js":"24","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Reports/keys.js":"25","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Reports/DonutSearch.js":"26","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Reports/BarsDate.js":"27","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Reports/BarsSearch.js":"28"},{"size":498,"mtime":1611075002813,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1611075002813,"results":"31","hashOfConfig":"30"},{"size":942,"mtime":1611075002805,"results":"32","hashOfConfig":"30"},{"size":5823,"mtime":1611075002813,"results":"33","hashOfConfig":"30"},{"size":1834,"mtime":1611075002813,"results":"34","hashOfConfig":"30"},{"size":1915,"mtime":1611075002809,"results":"35","hashOfConfig":"30"},{"size":764,"mtime":1611075002809,"results":"36","hashOfConfig":"30"},{"size":6402,"mtime":1611075002809,"results":"37","hashOfConfig":"30"},{"size":2070,"mtime":1611075002809,"results":"38","hashOfConfig":"30"},{"size":854,"mtime":1611075002809,"results":"39","hashOfConfig":"30"},{"size":1838,"mtime":1611075002809,"results":"40","hashOfConfig":"30"},{"size":323,"mtime":1611075002813,"results":"41","hashOfConfig":"30"},{"size":677,"mtime":1611075002813,"results":"42","hashOfConfig":"30"},{"size":5551,"mtime":1611075002809,"results":"43","hashOfConfig":"30"},{"size":8326,"mtime":1611075002809,"results":"44","hashOfConfig":"30"},{"size":5529,"mtime":1611075002809,"results":"45","hashOfConfig":"30"},{"size":392,"mtime":1611081479288,"results":"46","hashOfConfig":"30"},{"size":5727,"mtime":1611075002813,"results":"47","hashOfConfig":"30"},{"size":4765,"mtime":1611075002813,"results":"48","hashOfConfig":"30"},{"size":7770,"mtime":1611075002809,"results":"49","hashOfConfig":"30"},{"size":4308,"mtime":1611081571288,"results":"50","hashOfConfig":"30"},{"size":9683,"mtime":1611075002809,"results":"51","hashOfConfig":"30"},{"size":5033,"mtime":1611081568856,"results":"52","hashOfConfig":"30"},{"size":10529,"mtime":1611075002809,"results":"53","hashOfConfig":"30"},{"size":1736,"mtime":1611075002809,"results":"54","hashOfConfig":"30"},{"size":1697,"mtime":1611075002809,"results":"55","hashOfConfig":"30"},{"size":829,"mtime":1611075002809,"results":"56","hashOfConfig":"30"},{"size":2460,"mtime":1611075002809,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"84cjbv",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},"/home/fatima/Desktop/LMS-Front/src/index.js",[],["124","125"],"/home/fatima/Desktop/LMS-Front/src/reportWebVitals.js",[],"/home/fatima/Desktop/LMS-Front/src/App.js",[],"/home/fatima/Desktop/LMS-Front/src/Dashboard/loginPages/login.js",[],"/home/fatima/Desktop/LMS-Front/src/Dashboard/loginPages/Protection.js",[],"/home/fatima/Desktop/LMS-Front/src/Dashboard/Dashboard.js",[],"/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Not_Found/NotFound.js",[],"/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Admins/NewAdmin.js",["126","127"],"import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { green } from '@material-ui/core/colors';\nimport { useForm } from \"react-hook-form\";\nimport CookieService from '../../Service/CookieService';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios'\n\n\nconst useStyless = makeStyles((themee) => ({\n  paperr: {\n    paddingTop : themee.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n\n  formm: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: themee.spacing(1),\n  \n  },\n  submit: {\n    margin: themee.spacing(1, 0, 0),\n    marginLeft: \"35%\",\n    marginRight: \"35%\",\n    width: \"30%\",\n    color: themee.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n    backdrop: {\n      zIndex: themee.zIndex.drawer + 1,\n      color: 'green',\n    },\n   \n  },\n  editclass : {\n    backgroundColor: \"rgba(116, 255, 116, 0.145)\",\n    height : '86vh'\n  }\n \n}));\n\n\n\nfunction NewAdmin() {\n  const { register , handleSubmit , reset } = useForm();\n  const cookie = CookieService.get('Bearer');\n  const NewAdminclass = useStyless();\n  const [display, setdisplay] = useState({display: 'None', color: 'red' });\n  const [message, setmessage] = useState(\"none\");\n  let history = useHistory();\n\n\n  const Create = async (data) => {\n    const fd = new FormData();\n    fd.append('file', data.file[0])\n    fd.append(\"first_name\", data.first_name)\n    fd.append(\"last_name\", data.last_name)\n    fd.append(\"role\", data.role)\n    fd.append(\"email\", data.email)\n    fd.append(\"phone\", data.phone)\n    fd.append(\"password\", data.password)\n    fd.append(\"picture\", data.first_name.slice(-2) + data.phone.slice(-1) + data.last_name.slice(-2))\n    let headers = {\n      headers: {\n        'Content-Type':'form-data',\n        'Authorization': `Bearer ${cookie}`,\n      }\n    };\n    axios.post('http://localhost:8000/api/admin', fd, headers)\n   .then(res => {\n    setmessage(data.first_name + \" has been added\")\n    setdisplay({display: 'inline', color: 'green' })\n    reset();\n   })\n  .catch((error) => {\n   if(error.response){\n     console.log(error.response.data);\n     setmessage(Object.entries(error.response.data.errors).map((item, index) => \" \" + item[1] + \" \"))\n    setdisplay({display: 'inline', color: 'red' })\n   }else {\n    setmessage(\"N e t w o r k  E r r o r\")\n    setdisplay({display: 'inline', color: 'red' })\n  }\n  })\n}\n  return (\n    <div className={NewAdminclass.editclass} >\n    <Container  component=\"main\" maxWidth=\"md\">\n      <div className={NewAdminclass.paperr}>\n        <Typography component=\"h1\" variant=\"h5\">\n          New Admin\n        </Typography>\n        {<span style={display}>{message}</span>}\n        <form onSubmit={handleSubmit((data) => Create(data))} className={NewAdminclass.formm} >\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n       \n                autoComplete=\"fname\"\n                name=\"first_name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstname\"\n                label=\"First Name\"\n                inputRef={register}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastname\"\n                label=\"Last Name\"\n                name=\"last_name\"\n                autoComplete=\"lname\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={6} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"role\"\n                label=\"Role\"\n                name=\"role\"\n                autoComplete=\"lname\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={6} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"phone\"\n                label=\"Phone\"\n                name=\"phone\"\n                autoComplete=\"lname\"\n                inputRef={register}\n              />\n              </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <label for=\"image\">Profile Picture</label>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"file\"\n                type=\"file\"\n                id=\"file\"\n                inputRef={register}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={NewAdminclass.submit}\n          >\n            Sign Up\n          </Button>\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={()=> {\n                history.push(\"/admin/ManageAdmin\");\n                \n            }}\n            className={NewAdminclass.submit}\n          >\n            Cancel\n          </Button>\n        </form>\n      </div>\n    </Container>\n    </div>\n  );\n}\n\nexport default NewAdmin;","/home/fatima/Desktop/LMS-Front/src/Dashboard/Components/Sidebar/sidebar.js",[],"/home/fatima/Desktop/LMS-Front/src/Dashboard/Components/Sidebar/SidebarData.js",[],"/home/fatima/Desktop/LMS-Front/src/Dashboard/Components/Navbar/Navbar.js",[],"/home/fatima/Desktop/LMS-Front/src/Dashboard/Service/CookieService.js",[],"/home/fatima/Desktop/LMS-Front/src/Dashboard/Service/useVisible.js",[],"/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Admins/ManageAdmin.js",["128"],"import React, { useState, useEffect } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button } from '@material-ui/core';\nimport CookieService from '../../Service/CookieService';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EditAdmin from './EditAdmin';\nimport axios from 'axios';\n\n\n\nfunction ManageAdmin() {\n  const [Admins, setAdmins] = useState([])\n  const [Loading, setLoading] = useState(true)\n  const [Editing, setEditing] = useState(false)\n  const [AdminData, setAdminData] = useState({})\n    const useStyles = makeStyles((theme) => ({\n        adminsTable: {\n          color: 'green',\n          position: 'fixed',\n          zIndex: '0',\n          width: '70%',\n          height: '84vh',\n          marginTop: '1%',\n          'marginLeft': '15%',\n         \n        },\n        backdrop: {\n          zIndex: theme.zIndex.drawer + 1,\n          color: 'green',\n        },\n        manageadmins : {\n          backgroundColor: \"rgba(116, 255, 116, 0.145)\",\n          height : '86vh',\n        }\n      }));\n    const adminsTable = useStyles();\n    const cookie = CookieService.get('Bearer');\n    const linkkk = \"http://localhost:8000/api/admins/avatars/\"\n    \n\n   const HandleEdit = () => {\n      setEditing(!Editing)\n    }\n \n    useEffect( () => {\n      setLoading(true)\n      var config = {\n        method: 'get',\n        url: 'http://localhost:8000/api/admin',\n        headers: { \n          'Authorization': `Bearer ${cookie}`, \n          'Content-Type': 'application/x-www-form-urlencoded'\n        }};\n          axios(config)\n          .then(res => {\n                  setAdmins(res.data.map((item, index)=>  \n                    {return {\n                        ...item,\n                        delete: {id: item.id, img: item.picture},\n                        edit: {id: item.id, index: index },\n                        image   : linkkk + item.picture,\n                    }}));\n                    setLoading(false)\n          }).catch(err => {\n            console.log(err.request)\n          })\n    },[]);\n    console.log(Admins)\n    const DeleteAdmin = async (id, img) => {\n        setLoading(true);\n\n        var config2 = {\n          method: 'Delete',\n          url: `http://localhost:8000/api/admins/delavatar/${img}`,\n          headers: { \n            'Authorization': `Bearer ${cookie}`, \n            'Content-Type': 'application/x-www-form-urlencoded'\n          }};\n \n        var config = {\n        method: 'Delete',\n        url: `http://localhost:8000/api/admin/${id}`,\n        headers: { \n          'Authorization': `Bearer ${cookie}`, \n          'Content-Type': 'application/x-www-form-urlencoded'\n        }};\n  \n          axios(config)\n          .then(res => {\n            setAdmins(res.data.map(item =>  \n              {return {\n                  ...item,\n                  delete: item.id,\n                  edit: item.id,\n                  image   : linkkk + item.picture\n              }}));\n                  \n          }).catch(err => {\n            console.log(err.request.message)\n          })\n\n          axios(config2)\n          .then(res => {\n    \n          }).catch(err => {\n            console.log(err.request)\n          })\n          setLoading(false)\n    }\n    const columns = [\n\n      { field: 'id', headerName: 'ID', width:65},\n      {\n        field: 'image',\n        headerName: 'Picture',\n        width: 60,\n        sortable: false,\n        renderCell: (params) => (\n    \n            <Avatar style={{width: '1', height: '1'}} alt=\"Remy Sharp\" src={params.value}/>\n        ),\n      },\n      {\n        field: 'fullName',\n        headerName: 'Full name',\n        width: 160,\n        valueGetter: (params) =>\n          `${params.getValue('first_name') || ''} ${params.getValue('last_name') || ''}`,\n      },\n     \n      { field: 'role', headerName: 'Role', width: 120},\n      { field: 'email', headerName: 'Email' , width: 160 },\n      { field: 'phone', headerName: 'Phone', type:'number', width: 110 },\n      {\n        field: 'edit',\n        headerName: 'Edit',\n        renderCell: (params) => (\n        \n            <Button style={{backgroundColor: '#36C14B'}} variant=\"contained\" size=\"small\" alt=\"Remy Sharp\" onClick={\n               () =>  {\n                setAdminData(Admins[params.value.index]);\n                setEditing(true);\n               }}>\n                Edit\n            </Button>\n        ),\n      },\n      {\n        field: 'delete',\n        headerName: 'Delete',\n        sortable: false,\n        renderCell: (params) => (\n            <Button onClick={()=> DeleteAdmin(params.value.id, params.value.img)} style={{backgroundColor: '#F76363'}} variant=\"contained\" size=\"small\" alt=\"Remy Sharp\">\n                Delete\n            </Button>\n        ),\n      },\n      \n    ];\n    console.log(HandleEdit)\n    if(Loading){\n      return (\n        <div>\n            <Backdrop className={adminsTable.backdrop} open={true}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n      )\n    }\n    if(Editing){\n      return (\n        <div>\n            <EditAdmin AdminData={AdminData} Edit={HandleEdit} />\n        </div>\n      )\n    }else {\n  return (\n    <div className={adminsTable.manageadmins} >\n    <div className={adminsTable.adminsTable} >\n      <DataGrid rows={Admins} columns={columns} pageSize={8}/>\n    </div>\n    </div>\n  );\n    }\n}\n\n\nexport default ManageAdmin;","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Students/NewStudent.js",["129","130","131","132"],"import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { green } from '@material-ui/core/colors';\nimport { useForm } from \"react-hook-form\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CookieService from '../../Service/CookieService';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios'\n\n\n\nconst useStyless = makeStyles((themee) => ({\n  paperr: {\n    paddingTop : themee.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    height : '86vh',\n  },\n\n  formm: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: themee.spacing(1),\n  },\n  submit: {\n    margin: themee.spacing(1, 0, 0),\n    marginLeft: \"35%\",\n    marginRight: \"35%\",\n    width: \"30%\",\n    color: themee.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n    backdrop: {\n      zIndex: themee.zIndex.drawer + 1,\n      color: 'green',\n    },\n    studentsloading: {\n      color: 'green',\n      position: 'fixed',\n      zIndex: '0',\n      width: '70%',\n      height: '84vh',\n      marginTop: '1%',\n      'marginLeft': '15%',\n    },\n    editclass : {\n      backgroundColor: 'rgba(116, 255, 116, 0.145)'\n    }\n \n  },\n}));\n\n\n\nfunction NewStudent() {\n  const { register , handleSubmit, reset } = useForm();\n  const cookie = CookieService.get('Bearer');\n  const NewAdminclass = useStyless();\n  const [display, setdisplay] = useState({display: 'None', color: 'red' });\n  const [message, setmessage] = useState(\"none\");\n  const [Loading, setLoading] = useState(true)\n  const [Classes, setClasses] = useState([]);\n  const [Sections, setSections] = useState([]);\n  let history = useHistory();\n\n\n\n\n  useEffect(() => {\n    setLoading(true)\n    var config = {\n      method: 'get',\n      url: 'http://localhost:8000/api/classesinfo',\n      headers: { \n        'Authorization': `Bearer ${cookie}`, \n        'Content-Type': 'application/x-www-form-urlencoded'\n      }};\n        axios(config)\n        .then(res => {\n                setClasses(res.data.sections)\n                setSections(res.data.sections[0].getsections.map(item => item))\n        }).catch(err => {\n          console.log(err.request)\n        })\n       setLoading(false)\n  },[]);\n\n\n\n\n  const Create = async (data) => {\n    const fd = new FormData();\n    fd.append('file', data.file[0])\n    fd.append(\"first_name\", data.first_name)\n    fd.append(\"last_name\", data.last_name)\n    fd.append(\"email\", data.email)\n    fd.append(\"phone\", data.phone)\n    fd.append(\"section_id\", data.section_id)\n    fd.append(\"class_id\", data.class_id)\n    fd.append(\"picture\", data.first_name.slice(-2) + data.phone.slice(-1) + data.last_name.slice(-2))\n    let headers = {\n      headers: {\n        'Content-Type':'form-data',\n        'Authorization': `Bearer ${cookie}`,\n      }\n    };\n    axios.post('http://localhost:8000/api/student', fd, headers)\n   .then(res => {\n    \n    setmessage(data.first_name + \" has been added\")\n    setdisplay({display: 'inline', color: 'green' })\n    reset();\n   })\n  .catch((error) => {\n   if(error.response){\n    setmessage(Object.entries(error.response.data.errors).map((item, index) => \" \" + item[1] + \" \"))\n    setdisplay({display: 'inline', color: 'red' })\n   }else {\n    setmessage(\"N e t w o r k  E r r o r\")\n    setdisplay({display: 'inline', color: 'red' })\n  }\n  })\n}\nconst handleChangeSection = (event) => {\n  let pickedclass = (Classes.filter((item) => item.id == event.target.value))\n  let pickedsections = pickedclass[0].getsections.map(item => item)\n  setSections(pickedsections)\n\n };\n\n if(Loading) {\n      return (\n        <div>\n            <Backdrop className={NewAdminclass.backdrop} open={true}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n      )\n }\n else {\n  return (\n    <div  style={{backgroundColor: 'rgba(116, 255, 116, 0.145)'}} className={NewAdminclass.editclass} >\n    <Container component=\"main\" maxWidth=\"md\">\n      <div className={NewAdminclass.paperr}>\n        <Typography component=\"h1\" variant=\"h5\">\n          New Student\n        </Typography>\n        {<span style={display}>{message}</span>}\n        <form onSubmit={handleSubmit((data) => Create(data))} className={NewAdminclass.formm} >\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n       \n                autoComplete=\"fname\"\n                name=\"first_name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstname\"\n                label=\"First Name\"\n                inputRef={register}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastname\"\n                label=\"Last Name\"\n                name=\"last_name\"\n                autoComplete=\"lname\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={6} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"phone\"\n                label=\"Phone\"\n                name=\"phone\"\n                autoComplete=\"lname\"\n                inputRef={register}\n              />\n              </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={2}>\n            <TextField\n              id=\"class_id\"\n              select\n              onChange={handleChangeSection}\n              name=\"class_id\"\n              inputRef={register}\n              SelectProps={{\n              native: true,\n          }}\n          helperText=\"Please select Class\"\n        >\n          {Classes.map((option) => { \n            return (\n            <option key={option.id} value={option.id}>\n              {option.class_name}\n            </option>\n          )\n          }\n          )}\n        </TextField>\n            </Grid>\n            <Grid item xs={2}>\n            <TextField\n              id=\"section_id\"\n              select\n      \n              name=\"section_id\"\n              inputRef={register}\n              SelectProps={{\n              native: true,\n          }}\n          helperText=\"Please select Section\"\n        >\n          {Sections.map((option) => { \n            return (\n            <option key={option.id} value={option.id}>\n              {option.section_name}\n            </option>\n          )\n          }\n          )}\n        </TextField>\n            </Grid>\n            <Grid item xs={12}>\n            <label for=\"image\">Profile Picture</label>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"file\"\n                type=\"file\"\n                id=\"file\"\n                inputRef={register}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={NewAdminclass.submit}\n          >\n            Sign Up\n          </Button>\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={()=> {\n                history.push(\"/admin/ManageStudents\");\n            }}\n            className={NewAdminclass.submit}\n          >\n            Cancel\n          </Button>\n        </form>\n      </div>\n    </Container>\n    </div>\n  );\n          }\n}\n\nexport default NewStudent;","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Students/ManageStudent.js",["133"],"import React, { useState, useEffect } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button } from '@material-ui/core';\nimport CookieService from '../../Service/CookieService';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EditStudent from './EditStudent';\nimport axios from 'axios';\n\n\n\nfunction ManageAdmin() {\n  const [Admins, setAdmins] = useState([])\n  const [Loading, setLoading] = useState(true)\n  const [Editing, setEditing] = useState(false)\n  const [AdminData, setAdminData] = useState({})\n    const useStyles = makeStyles((theme) => ({\n        adminsTable: {\n          color: 'green',\n          position: 'fixed',\n          zIndex: '0',\n          width: '76%',\n          height: '84vh',\n          marginTop: '1%',\n          marginLeft: '12%'\n        },\n        backdrop: {\n          zIndex: theme.zIndex.drawer + 1,\n          color: 'green',\n        },\n      }));\n    const adminsTable = useStyles();\n    const cookie = CookieService.get('Bearer');\n    const linkkk = \"http://localhost:8000/api/students/avatars/\"\n    \n\n   const HandleEdit = () => {\n      setEditing(!Editing)\n    }\n \n    useEffect( () => {\n      setLoading(true)\n      var config = {\n        method: 'get',\n        url: 'http://localhost:8000/api/student',\n        headers: { \n          'Authorization': `Bearer ${cookie}`, \n          'Content-Type': 'application/x-www-form-urlencoded'\n        }};\n          axios(config)\n          .then(res => {\n            console.log(res.data)\n                  setAdmins(res.data.map((item, index)=>  \n                    {return {\n                        ...item,\n                        delete: {id: item.id, img: item.picture},\n                        edit: {id: item.id, index: index },\n                        image   : linkkk + item.picture,\n                    }}));\n                    setLoading(false)\n          }).catch(err => {\n            console.log(err.request)\n          })\n    },[]);\n    const DeleteAdmin = async (id, img) => {\n        setLoading(true);\n        console.log(img)\n        var config2 = {\n          method: 'Delete',\n          url: `http://localhost:8000/api/students/delavatar/${img}`,\n          headers: { \n            'Authorization': `Bearer ${cookie}`, \n            'Content-Type': 'application/x-www-form-urlencoded'\n          }};\n \n        var config = {\n        method: 'Delete',\n        url: `http://localhost:8000/api/student/${id}`,\n        headers: { \n          'Authorization': `Bearer ${cookie}`, \n          'Content-Type': 'application/x-www-form-urlencoded'\n        }};\n  \n          axios(config)\n          .then(res => {\n            console.log(res)\n            setAdmins(res.data.map(item =>  \n              {return {\n                  ...item,\n                  delete: item.id,\n                  edit: item.id,\n                  image   : linkkk + item.picture\n              }}));\n                  \n          }).catch(err => {\n            console.log(err)\n          })\n\n          axios(config2)\n          .then(res => {\n    \n          }).catch(err => {\n            console.log(err)\n          })\n          setLoading(false)\n    }\n    const columns = [\n\n      { field: 'student_id', headerName: 'ID', width:95},\n      {\n        field: 'image',\n        headerName: 'Picture',\n        width: 60,\n        sortable: false,\n        renderCell: (params) => (\n    \n            <Avatar style={{width: '1', height: '1'}} alt=\"Remy Sharp\" src={params.value}/>\n        ),\n      },\n      {\n        field: 'fullName',\n        headerName: 'Full name',\n        width: 150,\n        valueGetter: (params) =>\n          `${params.getValue('first_name') || ''} ${params.getValue('last_name') || ''}`,\n      },\n     \n      { field: 'class_name', headerName: 'Class', width: 100},\n      { field: 'section_name', headerName: 'Section', width: 100},\n      { field: 'email', headerName: 'Email' , width: 160 },\n      { field: 'phone', headerName: 'Phone', type:'number', width: 110 },\n      {\n        field: 'edit',\n        headerName: 'Edit',\n        sortable: false,\n        renderCell: (params) => (\n        \n            <Button style={{backgroundColor: '#36C14B'}} variant=\"contained\" size=\"small\" alt=\"Remy Sharp\" onClick={\n               () =>  {\n                 console.log(params)\n                setAdminData(Admins[params.value.index]);\n                setEditing(true);\n               }}>\n                Edit\n            </Button>\n        ),\n      },\n      {\n        field: 'delete',\n        headerName: 'Delete',\n        sortable: false,\n        renderCell: (params) => (\n            <Button onClick={()=> DeleteAdmin(params.value.id, params.value.img)} style={{backgroundColor: '#F76363'}} variant=\"contained\" size=\"small\" alt=\"Remy Sharp\">\n                Delete\n            </Button>\n        ),\n      },\n      \n    ];\n    if(Loading){\n      return (\n        <div>\n            <Backdrop className={adminsTable.backdrop} open={true}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n      )\n    }\n    if(Editing){\n      return (\n        <div>\n            <EditStudent AdminData={AdminData} Edit={HandleEdit} />\n        </div>\n      )\n    }else {\n  return (\n    <div className={adminsTable.adminsTable} >\n      <DataGrid rows={Admins} columns={columns} pageSize={8}/>\n    </div>\n  );\n    }\n}\n\n\nexport default ManageAdmin;","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Reports/Reports.js",[],"/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/classes-sections/ManageClass.js",["134"],"import React, { useState, useEffect } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport CookieService from '../../Service/CookieService';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport EditStudent from './EditClass';\nimport axios from 'axios';\n\n\n\n\nfunction ManageAdmin() {\n  const [Admins, setAdmins] = useState([])\n  const [Loading, setLoading] = useState(true)\n  const [Editing, setEditing] = useState(false)\n  const [AdminData, setAdminData] = useState({})\n  const [display, setdisplay] = useState({display: 'None', color: 'red' });\n  const [message, setmessage] = useState(\"none\");\n    const useStyles = makeStyles((theme) => ({\n        adminsTable: {\n          color: 'green',\n          zIndex: '0',\n          width: '55%',\n          height: '65vh',\n          marginTop: '1%',\n          'marginLeft': '25%',\n          \n        },\n        manageclass : {\n          backgroundColor: \"rgba(116, 255, 116, 0.145)\",\n          height:'86vh',\n          textAlign: 'center'\n\n        },\n        backdrop: {\n          zIndex: theme.zIndex.drawer + 1,\n          color: 'green',\n        },\n        ballout : {\n          padding: '2%'\n        }\n      }));\n    const adminsTable = useStyles();\n    const cookie = CookieService.get('Bearer');\n\n   const HandleEdit = () => {\n      setEditing(!Editing)\n    }\n \n    useEffect( () => {\n      setLoading(true)\n      var config = {\n        method: 'get',\n        url: 'http://localhost:8000/api/classesinfo',\n        headers: { \n          'Authorization': `Bearer ${cookie}`, \n          'Content-Type': 'application/x-www-form-urlencoded'\n        }};\n          axios(config)\n          .then(res => {\n   \n                  setAdmins(res.data.sections.map((item, index)=>  \n                    {return {\n                        ...item,\n                        class_name: item.class_name,\n                        sections: item.getsections.map(item => item.section_name).join(\", \"),\n                        delete: {id: item.id },\n                        edit: {id: item.id,index: index },\n                    }}));\n                    setLoading(false)\n          }).catch(err => {\n            console.log(err.request)\n          })\n    },[]);\n    const DeleteAdmin = (id) => {\n        setLoading(true)\n        var config = {\n        method: 'Delete',\n        url: `http://localhost:8000/api/classes/${id}`,\n        headers: { \n          'Authorization': `Bearer ${cookie}`, \n          'Content-Type': 'application/x-www-form-urlencoded'\n        }};\n  \n          axios(config)\n          .then(res => {\n            console.log(res.data.message)\n            setmessage(res.data.message)\n            setdisplay({display: 'inline', color: 'red' , })\n          }).catch(err => {\n            console.log(err)\n          })\n          setLoading(false)\n          var config2 = {\n            method: 'get',\n            url: 'http://localhost:8000/api/classesinfo',\n            headers: { \n              'Authorization': `Bearer ${cookie}`, \n              'Content-Type': 'application/x-www-form-urlencoded'\n            }};\n              axios(config2)\n              .then(res => {\n                      setAdmins(res.data.sections.map((item, index)=>  \n                        {return {\n                            ...item,\n                            class_name: item.class_name,\n                            sections: item.getsections.map(item => item.section_name).join(\", \"),\n                            delete: {id: item.id },\n                            edit: {id: item.id, index: index},\n                        }}));\n                        setLoading(false)\n              }).catch(err => {\n                console.log(err.request)\n              })\n    }\n    const columns = [\n\n  \n\n     \n      { field: 'class_name', headerName: 'Class', width: 170},\n      { field: 'sections', headerName: 'Sections', width: 300},\n\n      {\n        field: 'edit',\n        headerName: 'Edit',\n        sortable: false,\n\n        renderCell: (params) => (\n        \n          <Button style={{backgroundColor: '#36C14B'}} variant=\"contained\" size=\"small\" alt=\"Remy Sharp\" onClick={\n            () =>  {\n              console.log(params)\n             setAdminData(Admins[params.value.index]);\n             setEditing(true);\n            }}>\n             Edit\n         </Button>\n        ),\n      },\n      {\n        field: 'delete',\n        headerName: 'Delete',\n        sortable: false,\n\n        renderCell: (params) => (\n            <Button onClick={()=> DeleteAdmin(params.value.id)} style={{backgroundColor: '#F76363'}} variant=\"contained\" size=\"small\" alt=\"Remy Sharp\">\n                Delete\n            </Button>\n        ),\n      },\n      \n    ];\n    console.log(Admins, \"lalaaa\")\n    if(Loading){\n      return (\n        <div>\n            <Backdrop className={adminsTable.backdrop} open={true}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n      )\n    }\n    if(Editing){\n      return (\n        <div>\n            <EditStudent AdminData={AdminData} Edit={HandleEdit} />\n        </div>\n      )\n    }else {\n  return (\n    <div className={adminsTable.manageclass}>\n        <Typography className={adminsTable.ballout} component=\"h1\" variant=\"h5\">\n          Manage Classes\n        </Typography>\n        {<span style={display}>{message}</span>}\n      <div className={adminsTable.adminsTable} >\n        <DataGrid rows={Admins} columns={columns} pageSize={8}/>\n      </div>\n    </div>\n  );\n    }\n}\n\n\nexport default ManageAdmin;","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/classes-sections/NewClass.js",[],"/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Admins/EditAdmin.js",[],"/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Reports/Donut.js",["135","136","137"],"/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Students/EditStudent.js",["138","139","140","141"],"import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { green } from '@material-ui/core/colors';\nimport { useForm } from \"react-hook-form\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CookieService from '../../Service/CookieService';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios'\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" style={{cursor: \"alias\", textDecoration: \"none\"}}>\n        Learning Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\nconst useStyless = makeStyles((themee) => ({\n  paperr: {\n    paddingTop : themee.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n\n  formm: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: themee.spacing(1),\n  },\n  submit: {\n    margin: themee.spacing(1, 0, 0),\n    marginLeft: \"35%\",\n    marginRight: \"35%\",\n    width: \"30%\",\n    color: themee.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n\n    },\n    backdrop: {\n      zIndex: themee.zIndex.drawer + 1,\n      color: 'green',\n    },\n    studentsloading: {\n      color: 'green',\n      position: 'fixed',\n      zIndex: '0',\n      width: '70%',\n      height: '84vh',\n      marginTop: '1%',\n      'marginLeft': '15%',\n    },\n    editclass : {\n      backgroundColor: 'rgba(116, 255, 116, 0.145)'\n    }\n \n  },\n}));\n\n\n\nfunction NewStudent(props) {\n  const { register , handleSubmit} = useForm();\n  const cookie = CookieService.get('Bearer');\n  const NewAdminclass = useStyless();\n  const [display, setdisplay] = useState({display: 'None', color: 'red' });\n  const [message, setmessage] = useState(\"none\");\n  const [Loading, setLoading] = useState(true)\n  const [Sections, setSections] = useState([]);\n  const [Classes, setClasses] = useState([]);\n  let history = useHistory();\n  const [CurrentClass, setCurrnetClass] = useState(props.AdminData.class_id)\n  const [CurrentSection, setCurrentSection] = useState(props.AdminData.section_id)\n  useEffect(() => {\n    setLoading(true)\n    var config = {\n      method: 'get',\n      url: 'http://localhost:8000/api/classesinfo',\n      headers: { \n        'Authorization': `Bearer ${cookie}`, \n        'Content-Type': 'application/x-www-form-urlencoded'\n      }};\n        axios(config)\n        .then(res => {\n          console.log(res.data.sections)\n          console.log(props.AdminData.id)\n                setClasses(res.data.sections)\n                // setSections(res.data.sections.getsections.map(item => item))\n                setSections(res.data.sections.filter(item => item.id == props.AdminData.class_id)[0].getsections)\n        }).catch(err => {\n          console.log(err)\n        })\n       setLoading(false)\n  },[]);\n\n\n  const Modify = async (data) => {\n    console.log(data)\n    let id = props.AdminData.id\n    let file = data.file[0]\n    const fd = new FormData();\n    if(file){\n      fd.append('file', file)\n      fd.append(\"picture\", data['first_name'].slice(-2) + data['phone'].slice(-1) + data['last_name'].slice(-2))\n     }\n    fd.append(\"first_name\", data.first_name)\n    fd.append(\"last_name\", data.last_name)\n    fd.append(\"email\", data.email)\n    fd.append(\"phone\", data.phone)\n    fd.append(\"section_id\", data.section_id)\n    fd.append(\"class_id\", data.class_id)\n    let headers = {\n      'method' : 'POST',\n       data : fd,\n       headers: {\n         'Authorization': `Bearer ${cookie}`,\n       }\n     };\n     axios(`http://localhost:8000/api/student/${id}`, headers)\n    .then(res => {\n        console.log(res)\n     setmessage(\"Student info has been Modified\")\n     setdisplay({display: 'inline', color: 'green' })\n     props.Edit()\n     window.location.replace(\"/admin/ManageStudents\")\n    })\n   .catch((error) => {\n    if(error.response){\n      console.log(error);\n      setmessage(Object.entries(error.response.data.errors).map((item, index) => \" \" + item[1] + \" \"))\n     setdisplay({display: 'inline', color: 'red' })\n    }else {\n      setmessage(\"N e t w o r k  E r r o r\")\n      setdisplay({display: 'inline', color: 'red' })\n    }\n   })\n}\nconst handleChangeClass = (event) => {\n  setCurrnetClass(event.target.value)\n  let pickedclass = (Classes.filter((item) => item.id == event.target.value))\n  let pickedsections = pickedclass[0].getsections.map(item => item)\n  setSections(pickedsections)\n };\n\n\n const handleChangeSection = (event) => {\n   setCurrentSection(Sections.filter(item => item.id == event.target.value)[0].id)\n };\n\n if(Loading) {\n      return (\n        <div>\n            <Backdrop className={NewAdminclass.backdrop} open={true}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n      )\n }\n else {\n  return (\n    <div className={NewAdminclass.editclass} >\n    <Container component=\"main\" maxWidth=\"md\">\n      <div className={NewAdminclass.paperr}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Edit Student Profile\n        </Typography>\n        {<span style={display}>{message}</span>}\n        <form onSubmit={handleSubmit((data) => Modify(data))} className={NewAdminclass.formm} >\n        <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                defaultValue={props.AdminData.first_name}\n                autoComplete=\"fname\"\n                name=\"first_name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstname\"\n                label=\"First Name\"\n                inputRef={register}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                defaultValue={props.AdminData.last_name}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastname\"\n                label=\"Last Name\"\n                name=\"last_name\"\n                autoComplete=\"lname\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={6} sm={6}>\n              <TextField\n                defaultValue={props.AdminData.phone}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"phone\"\n                label=\"Phone\"\n                name=\"phone\"\n                autoComplete=\"lname\"\n                inputRef={register}\n              />\n              </Grid>\n            <Grid item xs={12}>\n              <TextField\n                defaultValue={props.AdminData.email}\n                variant=\"outlined\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <TextField\n              value={CurrentClass}\n              id=\"class_id\"\n              select\n              onChange={handleChangeClass}\n              name=\"class_id\"\n              inputRef={register}\n              SelectProps={{\n              native: true,\n          }}\n          helperText=\"Please select CLass\"\n        >\n          {Classes.map((option) => { \n            return (\n            <option key={option.id} value={option.id}>\n              {option.class_name}\n            </option>\n          )\n          }\n          )}\n        </TextField>\n            </Grid>\n            <Grid item xs={12}>\n            <TextField\n              value={CurrentSection}\n              onChange={handleChangeSection}\n              id=\"section_id\"\n              select\n              name=\"section_id\"\n              inputRef={register}\n              SelectProps={{\n              native: true,\n          }}\n          helperText=\"Please select Section\"\n        >\n          {Sections.map((option) => { \n            return (\n            <option key={option.id} value={option.id}>\n              {option.section_name}\n            </option>\n          )\n          }\n          )}\n        </TextField>\n            </Grid>\n            <Grid item xs={12}>\n            <label for=\"image\">Profile Picture</label>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                name=\"file\"\n                type=\"file\"\n                id=\"file\"\n                inputRef={register}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={NewAdminclass.submit}\n          >\n            Save\n          </Button>\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={()=> {\n                props.Edit()\n                history.push(\"/admin/ManageStudents\");\n            }}\n            className={NewAdminclass.submit}\n          >\n            Cancel\n          </Button>\n        </form>\n      </div>\n      <Box mt={1.3}>\n        <Copyright />\n      </Box>\n    </Container>\n    </div>\n  );\n          }\n}\n\nexport default NewStudent;","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Reports/Bars.js",["142","143","144","145","146","147","148","149"],"/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/classes-sections/EditClass.js",["150","151","152","153"],"import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { useForm } from \"react-hook-form\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CookieService from '../../Service/CookieService';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" style={{cursor: \"alias\", textDecoration: \"none\"}}>\n        Learning Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\nconst useStyless = makeStyles((themee) => ({\n  paperr: {\n    paddingTop : themee.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '99%'\n\n  },\n\n  formm: {\n    width: '80%', // Fix IE 11 issue.\n    marginTop: themee.spacing(1),\n  },\n  submit: {\n    margin: themee.spacing(1, 0, 0),\n    marginLeft: \"35%\",\n    marginRight: \"35%\",\n    width: \"30%\",\n    color: themee.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n    backdrop: {\n      zIndex: themee.zIndex.drawer + 1,\n      color: 'green',\n    },\n    studentsloading: {\n      color: 'green',\n      position: 'fixed',\n      zIndex: '0',\n      width: '70%',\n      height: '84vh',\n      marginTop: '1%',\n      'marginLeft': '15%',\n    },\n    \n  },\n  submit2: {\n    margin: themee.spacing(5, 2, 0),\n    width: \"10%\",\n    color: themee.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n    backdrop: {\n      zIndex: themee.zIndex.drawer + 1,\n      color: 'green',\n    },\n    studentsloading: {\n      color: 'green',\n      position: 'fixed',\n      zIndex: '0',\n      width: '70%',\n      height: '84vh',\n      marginTop: '1%',\n      'marginLeft': '15%',\n    },\n    \n  },\n  label: {\n    fontSize: '0.9rem',\n    paddingLeft: '1%'\n  },\n  adminsTable: {\n    color: 'green',\n    width: '50%',\n    height: '50vh',\n    marginTop: '1%',\n    'marginLeft': '25%',\n    \n  },\n  backdrop: {\n    zIndex: themee.zIndex.drawer + 1,\n    color: 'green',\n  },\n  editclass : {\n    backgroundColor: 'rgba(116, 255, 116, 0.145)'\n  }\n}));\n\n\n\nfunction NewStudent(props) {\n  const { register , handleSubmit, reset } = useForm();\n  const cookie = CookieService.get('Bearer');\n  const NewAdminclass = useStyless();\n  const [display, setdisplay] = useState({display: 'None', color: 'red' });\n  const [message, setmessage] = useState(\"none\");\n  const [Loading, setLoading] = useState(true)\n  const [Sections, setSections] = useState([]);\n  const [NewSection, setNewSection] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    setLoading(true)\n    setLoading(true)\n    var config = {\n      method: 'get',\n      url: 'http://localhost:8000/api/classesinfo',\n      headers: { \n        'Authorization': `Bearer ${cookie}`, \n        'Content-Type': 'application/x-www-form-urlencoded'\n      }};\n        axios(config)\n        .then(res => {\n          setSections(res.data.sections.filter(item => item.id == props.AdminData.id)[0].getsections.map((item, index)=>  \n          {return {\n              ...item,\n              sections: item.section_name,\n              delete: {id: item.id },\n          }}))\n\n        }).catch(err => {\n          console.log(err)\n          \n        })\n       setLoading(false)\n  },[]);\n\n  const DeleteSection = (id) => {\n    setLoading(true);\n    const class_id = [props.AdminData.id, id]\n    console.log(id)\n    var config = {\n    method: 'Delete',\n    url: `http://localhost:8000/api/section/${id}`,\n    headers: { \n      'Authorization': `Bearer ${cookie}`, \n      'Content-Type': 'application/x-www-form-urlencoded'\n    }};\n\n      axios(config)\n      .then(res => {\n        console.log(res)\n        setmessage(res.data.message)\n        setdisplay({display: 'inline', color: 'green' })\n      }).catch(err => {\n        console.log(err)\n        \n      })\n      var config2 = {\n        method: 'get',\n        url: 'http://localhost:8000/api/classesinfo',\n        headers: { \n          'Authorization': `Bearer ${cookie}`, \n          'Content-Type': 'application/x-www-form-urlencoded'\n        }};\n          axios(config2)\n          .then(res => {\n            setSections(res.data.sections.filter(item => item.id == props.AdminData.id)[0].getsections.map((item, index)=>  \n            {return {\n                ...item,\n                sections: item.section_name,\n                delete: {id: item.id },\n            }}))\n          }).catch(err => {\n            console.log(err)\n            \n          })\n         setLoading(false)\n\n  }\n  const columns = [\n\n    { field: 'sections', headerName: 'Sections', width: 400},\n    {\n      field: 'delete',\n      headerName: 'Delete',\n      sortable: false,\n\n      renderCell: (params) => (\n          <Button onClick={()=> DeleteSection(params.value.id)} style={{backgroundColor: '#F76363'}} variant=\"contained\" size=\"small\" alt=\"Remy Sharp\">\n              Delete\n          </Button>\n      ),\n    },\n    \n  ];\n\n  const Modify = async (data) => {\n    console.log(data)\n    let id = props.AdminData.id\n    const fd = new FormData();\n    fd.append(\"class_name\", data.class_name)\n\n    let headers = {\n      'method' : 'POST',\n       data : fd,\n       headers: {\n         'Authorization': `Bearer ${cookie}`,\n       }\n     };\n     axios(`http://localhost:8000/api/classes/${id}`, headers)\n    .then(res => {\n        console.log(res)\n     setmessage(\"Class Name has been Modified\")\n     setdisplay({display: 'inline', color: 'green' })\n     props.Edit()\n     window.location.replace('/admin/ManageClasses')\n    })\n   .catch((error) => {\n\n    if(error.response){\n      console.log(error.response.request)\n     setmessage(Object.entries(error.response.data.errors).map((item, index) => \" \" + item[1] + \" \"))\n     setdisplay({display: 'inline', color: 'red' })\n    }else {\n      setmessage(\"N e t w o r k  E r r o r\")\n      setdisplay({display: 'inline', color: 'red' })\n    }\n   })\n}\n\n\nconst newsection = () => {\n  console.log(NewSection)\n  let id = props.AdminData.id\n  const fd = new FormData();\n  fd.append(\"class_id\", id)\n  fd.append('section_name', NewSection.toUpperCase())\n  let headers = {\n    'method' : 'POST',\n     data : fd,\n     headers: {\n       'Authorization': `Bearer ${cookie}`,\n     }\n   };\n   axios(`http://localhost:8000/api/section/${id}`, headers)\n  .then(res => {\n      console.log(res)\n   setmessage(\"New section has been added\")\n   setdisplay({display: 'inline', color: 'green' })\n\n  console.log(res);\n    console.log(res.data.section, \"shit\")\n   setSections(res.data.section.map((item, index)=>  \n                {return {\n                    ...item,\n                    sections: item.section_name,\n                    delete: {id: item.id },\n\n                }}))\n    setNewSection(\"\")     \n    reset();\n  })\n .catch((error) => {\n  if(error.response){\n    setmessage(Object.entries(error.response.data.errors).map((item, index) => \" \" + item[1] + \" \"))\n   setdisplay({display: 'inline', color: 'red' })\n  }else {\n    setmessage(\"N e t w o r k  E r r o r\")\n    setdisplay({display: 'inline', color: 'red' })\n  }\n })\n}\n  console.log(props)\n if(Loading) {\n      return (\n        <div>\n            <Backdrop className={NewAdminclass.backdrop} open={true}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n      )\n }\n else {\n  return (\n    <div className={NewAdminclass.editclass} >\n      <div className={NewAdminclass.paperr}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Edit Class\n        </Typography>\n        {<span style={display}>{message}</span>}\n        <form onSubmit={handleSubmit((data) => Modify(data))} className={NewAdminclass.formm} >\n          <Grid container spacing={2}>\n          <Grid sm={3}></Grid>\n            <Grid item sm={6}>\n            <label className={NewAdminclass.label} htmlFor=\"class_name\">Class Name</label>\n              <TextField\n                autoComplete=\"Classname\"\n                name=\"class_name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                defaultValue={props.AdminData.class_name}\n                id=\"class_name\"\n     \n                inputRef={register}\n                autoFocus\n              />\n            </Grid>\n            <Grid sm={3}></Grid>\n            <Grid sm={3}></Grid>\n            <Grid item sm={6}>\n            <label className={NewAdminclass.label} htmlFor=\"class_name\">New Section</label>\n              <TextField\n                autoComplete=\"Section_name\"\n                name=\"section_name\"\n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setNewSection(e.target.value)}\n                id=\"section_name\"\n                inputRef={register}\n                autoFocus\n              />\n            </Grid>\n            <Grid sm={3}>\n            <Button onClick={newsection} className={NewAdminclass.submit2} >Add</Button>\n            </Grid>\n          </Grid>\n          <Grid sm={12}>\n          <div className={NewAdminclass.adminsTable} >\n              <DataGrid rows={Sections} columns={columns} pageSize={8}/>\n          </div>\n          </Grid>\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={NewAdminclass.submit}\n          >\n            Update\n          </Button>\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={()=> {\n                props.Edit()\n                history.push(\"/admin/ManageClasses\");\n            }}\n            className={NewAdminclass.submit}\n          >\n            Back\n          </Button>\n        </form>\n      </div>\n      <Box mt={1.3}>\n        <Copyright />\n      </Box>\n\n    </div>\n  );\n          }\n}\n\nexport default NewStudent;","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Reports/keys.js",[],"/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Reports/DonutSearch.js",["154","155"],"/* eslint-disable no-use-before-define */\nimport React, { useEffect, useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport axios from 'axios'\nimport CookieService from '../../Service/CookieService';\n\nexport default function DonutSearch(props) {\n    const cookie = CookieService.get('Bearer');\n    const [Loading, setLoading] = useState(true);\n    const [Student, setStudent] = useState([]);\n\n    useEffect(() => {\n        setLoading(true)\n        var config = {\n          method: 'get',\n          url: 'http://localhost:8000/api/student',\n          headers: { \n            'Authorization': `Bearer ${cookie}`, \n            'Content-Type': 'application/x-www-form-urlencoded'\n          }};\n            axios(config)\n            .then(res => {\n                    setStudent(res.data)\n            }).catch(err => {\n              console.log(err.request)\n            })\n           setLoading(false)\n      },[]);\n\n  const options = Student.map((option) => {\n    const firstLetter = option.first_name[0].toUpperCase();\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n      ...option,\n    };\n  });\n \n  return (\n    <Autocomplete\n      id=\"student_id\"\n      onChange={(event, value) => value ? props.setStudent(value) : null}\n      options={options.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\n      groupBy={(option) => option.firstLetter}\n      getOptionLabel={(option) => option.first_name + \" \" + option.last_name}\n      style={{ width: 300 }}\n      renderInput={(params) => <TextField {...params} label=\"Select a Student\" variant=\"outlined\" />}\n    />\n  );\n}\n\n\n","/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Reports/BarsDate.js",[],"/home/fatima/Desktop/LMS-Front/src/Dashboard/Pages/Reports/BarsSearch.js",["156","157","158","159","160","161","162"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport CookieService from '../../Service/CookieService';\nimport axios from 'axios'\nimport { RestaurantMenu } from \"@material-ui/icons\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n  },\n}));\n  \nexport default function BarsSearch(props) {\n  const classes = useStyles();\n  const cookie = CookieService.get('Bearer');\n  const [Loading, setLoading] = useState(true);\n  const [Classes, setClasses] = useState([]);\n  const [Sections, setSections] = useState([]);\n    useEffect(() => {\n        setLoading(true)\n        var config = {\n          method: 'get',\n          url: 'http://localhost:8000/api/classesinfo',\n          headers: { \n            'Authorization': `Bearer ${cookie}`, \n            'Content-Type': 'application/x-www-form-urlencoded'\n          }};\n            axios(config)\n            .then(res => {\n                setClasses(res.data.sections)                \n            }).catch(err => {\n              console.log(err.request)\n            })\n           setLoading(false)\n      },[]);\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"grouped-native-select\">Select a Section</InputLabel>\n        <Select native defaultValue=\"\" id=\"grouped-native-select\" \n        onChange={(event) => event.target.value ? props.setSection(event.target.value ) : null}\n        >\n\n          <option aria-label=\"None\" value=\"\" />\n          {Classes.map((option) => { \n              return (\n                <optgroup label={option.class_name} key={option.id} value={option.id}>\n                    \n                        {option.getsections.map((item)=>{\n                            return(\n                                <>\n                                <option label={item.section_name} value={item.id}></option>\n                                </>\n                            )\n\n                    })}\n                </optgroup>\n                )\n           \n          }\n          )}\n          \n        </Select>\n      </FormControl>\n      \n    </div>\n  );\n}\n",{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":12},{"ruleId":"167","severity":1,"message":"171","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":11},{"ruleId":"172","severity":1,"message":"173","line":70,"column":7,"nodeType":"174","endLine":70,"endColumn":9,"suggestions":"175"},{"ruleId":"167","severity":1,"message":"168","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":12},{"ruleId":"167","severity":1,"message":"171","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":11},{"ruleId":"172","severity":1,"message":"173","line":96,"column":5,"nodeType":"174","endLine":96,"endColumn":7,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":135,"column":55,"nodeType":"179","messageId":"180","endLine":135,"endColumn":57},{"ruleId":"172","severity":1,"message":"173","line":66,"column":7,"nodeType":"174","endLine":66,"endColumn":9,"suggestions":"181"},{"ruleId":"172","severity":1,"message":"173","line":77,"column":7,"nodeType":"174","endLine":77,"endColumn":9,"suggestions":"182"},{"ruleId":"172","severity":1,"message":"183","line":79,"column":17,"nodeType":"184","endLine":99,"endColumn":8},{"ruleId":"172","severity":1,"message":"173","line":99,"column":9,"nodeType":"174","endLine":99,"endColumn":20,"suggestions":"185"},{"ruleId":"172","severity":1,"message":"183","line":102,"column":19,"nodeType":"184","endLine":125,"endColumn":8},{"ruleId":"177","severity":1,"message":"178","line":103,"column":70,"nodeType":"179","messageId":"180","endLine":103,"endColumn":72},{"ruleId":"172","severity":1,"message":"186","line":108,"column":5,"nodeType":"174","endLine":108,"endColumn":7,"suggestions":"187"},{"ruleId":"177","severity":1,"message":"178","line":154,"column":55,"nodeType":"179","messageId":"180","endLine":154,"endColumn":57},{"ruleId":"177","severity":1,"message":"178","line":161,"column":54,"nodeType":"179","messageId":"180","endLine":161,"endColumn":56},{"ruleId":"167","severity":1,"message":"188","line":69,"column":10,"nodeType":"169","messageId":"170","endLine":69,"endColumn":26},{"ruleId":"167","severity":1,"message":"189","line":69,"column":28,"nodeType":"169","messageId":"170","endLine":69,"endColumn":47},{"ruleId":"167","severity":1,"message":"190","line":75,"column":10,"nodeType":"169","messageId":"170","endLine":75,"endColumn":23},{"ruleId":"167","severity":1,"message":"191","line":75,"column":25,"nodeType":"169","messageId":"170","endLine":75,"endColumn":41},{"ruleId":"172","severity":1,"message":"183","line":89,"column":13,"nodeType":"184","endLine":111,"endColumn":4},{"ruleId":"177","severity":1,"message":"192","line":101,"column":36,"nodeType":"179","messageId":"180","endLine":101,"endColumn":38},{"ruleId":"177","severity":1,"message":"178","line":103,"column":33,"nodeType":"179","messageId":"180","endLine":103,"endColumn":35},{"ruleId":"172","severity":1,"message":"173","line":111,"column":6,"nodeType":"174","endLine":111,"endColumn":24,"suggestions":"193"},{"ruleId":"177","severity":1,"message":"178","line":140,"column":64,"nodeType":"179","messageId":"180","endLine":140,"endColumn":66},{"ruleId":"172","severity":1,"message":"194","line":152,"column":5,"nodeType":"174","endLine":152,"endColumn":7,"suggestions":"195"},{"ruleId":"167","severity":1,"message":"196","line":156,"column":11,"nodeType":"169","messageId":"170","endLine":156,"endColumn":19},{"ruleId":"177","severity":1,"message":"178","line":184,"column":66,"nodeType":"179","messageId":"180","endLine":184,"endColumn":68},{"ruleId":"167","severity":1,"message":"197","line":10,"column":12,"nodeType":"169","messageId":"170","endLine":10,"endColumn":19},{"ruleId":"172","severity":1,"message":"173","line":29,"column":9,"nodeType":"174","endLine":29,"endColumn":11,"suggestions":"198"},{"ruleId":"167","severity":1,"message":"199","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":16},{"ruleId":"167","severity":1,"message":"200","line":5,"column":8,"nodeType":"169","messageId":"170","endLine":5,"endColumn":21},{"ruleId":"167","severity":1,"message":"201","line":10,"column":10,"nodeType":"169","messageId":"170","endLine":10,"endColumn":24},{"ruleId":"167","severity":1,"message":"197","line":23,"column":10,"nodeType":"169","messageId":"170","endLine":23,"endColumn":17},{"ruleId":"167","severity":1,"message":"202","line":25,"column":10,"nodeType":"169","messageId":"170","endLine":25,"endColumn":18},{"ruleId":"167","severity":1,"message":"203","line":25,"column":20,"nodeType":"169","messageId":"170","endLine":25,"endColumn":31},{"ruleId":"172","severity":1,"message":"173","line":42,"column":9,"nodeType":"174","endLine":42,"endColumn":11,"suggestions":"204"},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cookie'. Either include it or remove the dependency array.","ArrayExpression",["207"],["208"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["209"],["210"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["211"],"React Hook useEffect has missing dependencies: 'cookie', 'props.AdminData.class_id', and 'props.AdminData.id'. Either include them or remove the dependency array. If 'setSections' needs the current value of 'props.AdminData.class_id', you can also switch to useReducer instead of useState and read 'props.AdminData.class_id' in the reducer.",["212"],"'attendanceByDate' is assigned a value but never used.","'setAttendanceByDate' is assigned a value but never used.","'totalStudents' is assigned a value but never used.","'settotalstudents' is assigned a value but never used.","Expected '!==' and instead saw '!='.",["213"],"React Hook useEffect has missing dependencies: 'cookie' and 'props.AdminData.id'. Either include them or remove the dependency array. If 'setSections' needs the current value of 'props.AdminData.id', you can also switch to useReducer instead of useState and read 'props.AdminData.id' in the reducer.",["214"],"'class_id' is assigned a value but never used.","'Loading' is assigned a value but never used.",["215"],"'MenuItem' is defined but never used.","'ListSubheader' is defined but never used.","'RestaurantMenu' is defined but never used.","'Sections' is assigned a value but never used.","'setSections' is assigned a value but never used.",["216"],"no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"217","fix":"219"},{"desc":"217","fix":"220"},{"desc":"217","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"217","fix":"230"},{"desc":"217","fix":"231"},"Update the dependencies array to be: [cookie]",{"range":"232","text":"233"},{"range":"234","text":"233"},{"range":"235","text":"233"},{"range":"236","text":"233"},"Update the dependencies array to be: [cookie, studentId]",{"range":"237","text":"238"},"Update the dependencies array to be: [cookie, props.AdminData.class_id, props.AdminData.id]",{"range":"239","text":"240"},"Update the dependencies array to be: [sectionId, datee, cookie]",{"range":"241","text":"242"},"Update the dependencies array to be: [cookie, props.AdminData.id]",{"range":"243","text":"244"},{"range":"245","text":"233"},{"range":"246","text":"233"},[2211,2213],"[cookie]",[2700,2702],[2121,2123],[2425,2427],[2506,2517],"[cookie, studentId]",[3351,3353],"[cookie, props.AdminData.class_id, props.AdminData.id]",[2792,2810],"[sectionId, datee, cookie]",[3960,3962],"[cookie, props.AdminData.id]",[993,995],[1438,1440]]